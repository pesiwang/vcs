// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group_package.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "group_package.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace group {

namespace {

const ::google::protobuf::Descriptor* RequestCreateGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestCreateGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseCreateGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseCreateGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestDismissGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestDismissGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseDismissGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseDismissGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestJoinGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestJoinGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseJoinGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseJoinGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestQuitGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestQuitGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseQuitGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseQuitGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMsgGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMsgGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseMsgGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseMsgGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestBroadcastGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestBroadcastGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseBroadcastGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseBroadcastGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseRegisterChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseRegisterChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestGetGroupInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestGetGroupInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GroupMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GroupMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseGetGroupInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseGetGroupInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestSetGroupStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestSetGroupStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseSetGroupStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseSetGroupStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_group_5fpackage_2eproto() {
  protobuf_AddDesc_group_5fpackage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "group_package.proto");
  GOOGLE_CHECK(file != NULL);
  RequestCreateGroup_descriptor_ = file->message_type(0);
  static const int RequestCreateGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCreateGroup, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCreateGroup, group_id_),
  };
  RequestCreateGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestCreateGroup_descriptor_,
      RequestCreateGroup::default_instance_,
      RequestCreateGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCreateGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCreateGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestCreateGroup));
  ResponseCreateGroup_descriptor_ = file->message_type(1);
  static const int ResponseCreateGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseCreateGroup, result_),
  };
  ResponseCreateGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseCreateGroup_descriptor_,
      ResponseCreateGroup::default_instance_,
      ResponseCreateGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseCreateGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseCreateGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseCreateGroup));
  RequestDismissGroup_descriptor_ = file->message_type(2);
  static const int RequestDismissGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestDismissGroup, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestDismissGroup, group_id_),
  };
  RequestDismissGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestDismissGroup_descriptor_,
      RequestDismissGroup::default_instance_,
      RequestDismissGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestDismissGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestDismissGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestDismissGroup));
  ResponseDismissGroup_descriptor_ = file->message_type(3);
  static const int ResponseDismissGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseDismissGroup, result_),
  };
  ResponseDismissGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseDismissGroup_descriptor_,
      ResponseDismissGroup::default_instance_,
      ResponseDismissGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseDismissGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseDismissGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseDismissGroup));
  RequestJoinGroup_descriptor_ = file->message_type(4);
  static const int RequestJoinGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestJoinGroup, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestJoinGroup, group_id_),
  };
  RequestJoinGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestJoinGroup_descriptor_,
      RequestJoinGroup::default_instance_,
      RequestJoinGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestJoinGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestJoinGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestJoinGroup));
  ResponseJoinGroup_descriptor_ = file->message_type(5);
  static const int ResponseJoinGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseJoinGroup, result_),
  };
  ResponseJoinGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseJoinGroup_descriptor_,
      ResponseJoinGroup::default_instance_,
      ResponseJoinGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseJoinGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseJoinGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseJoinGroup));
  RequestQuitGroup_descriptor_ = file->message_type(6);
  static const int RequestQuitGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQuitGroup, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQuitGroup, group_id_),
  };
  RequestQuitGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestQuitGroup_descriptor_,
      RequestQuitGroup::default_instance_,
      RequestQuitGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQuitGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQuitGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestQuitGroup));
  ResponseQuitGroup_descriptor_ = file->message_type(7);
  static const int ResponseQuitGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseQuitGroup, result_),
  };
  ResponseQuitGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseQuitGroup_descriptor_,
      ResponseQuitGroup::default_instance_,
      ResponseQuitGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseQuitGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseQuitGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseQuitGroup));
  RequestMsgGroup_descriptor_ = file->message_type(8);
  static const int RequestMsgGroup_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, time_),
  };
  RequestMsgGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMsgGroup_descriptor_,
      RequestMsgGroup::default_instance_,
      RequestMsgGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMsgGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMsgGroup));
  ResponseMsgGroup_descriptor_ = file->message_type(9);
  static const int ResponseMsgGroup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMsgGroup, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMsgGroup, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMsgGroup, recver_),
  };
  ResponseMsgGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseMsgGroup_descriptor_,
      ResponseMsgGroup::default_instance_,
      ResponseMsgGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMsgGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMsgGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseMsgGroup));
  RequestBroadcastGroup_descriptor_ = file->message_type(10);
  static const int RequestBroadcastGroup_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, mid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, time_),
  };
  RequestBroadcastGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestBroadcastGroup_descriptor_,
      RequestBroadcastGroup::default_instance_,
      RequestBroadcastGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBroadcastGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestBroadcastGroup));
  ResponseBroadcastGroup_descriptor_ = file->message_type(11);
  static const int ResponseBroadcastGroup_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseBroadcastGroup, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseBroadcastGroup, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseBroadcastGroup, recver_),
  };
  ResponseBroadcastGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseBroadcastGroup_descriptor_,
      ResponseBroadcastGroup::default_instance_,
      ResponseBroadcastGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseBroadcastGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseBroadcastGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseBroadcastGroup));
  ResponseRegisterChat_descriptor_ = file->message_type(12);
  static const int ResponseRegisterChat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseRegisterChat, result_),
  };
  ResponseRegisterChat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseRegisterChat_descriptor_,
      ResponseRegisterChat::default_instance_,
      ResponseRegisterChat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseRegisterChat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseRegisterChat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseRegisterChat));
  RequestGetGroupInfo_descriptor_ = file->message_type(13);
  static const int RequestGetGroupInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetGroupInfo, group_id_),
  };
  RequestGetGroupInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestGetGroupInfo_descriptor_,
      RequestGetGroupInfo::default_instance_,
      RequestGetGroupInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetGroupInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGetGroupInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestGetGroupInfo));
  GroupMember_descriptor_ = file->message_type(14);
  static const int GroupMember_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, active_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, join_time_),
  };
  GroupMember_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GroupMember_descriptor_,
      GroupMember::default_instance_,
      GroupMember_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GroupMember));
  ResponseGetGroupInfo_descriptor_ = file->message_type(15);
  static const int ResponseGetGroupInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, creator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, last_active_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, member_),
  };
  ResponseGetGroupInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseGetGroupInfo_descriptor_,
      ResponseGetGroupInfo::default_instance_,
      ResponseGetGroupInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseGetGroupInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseGetGroupInfo));
  RequestSetGroupStatus_descriptor_ = file->message_type(16);
  static const int RequestSetGroupStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestSetGroupStatus, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestSetGroupStatus, status_),
  };
  RequestSetGroupStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestSetGroupStatus_descriptor_,
      RequestSetGroupStatus::default_instance_,
      RequestSetGroupStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestSetGroupStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestSetGroupStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestSetGroupStatus));
  ResponseSetGroupStatus_descriptor_ = file->message_type(17);
  static const int ResponseSetGroupStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseSetGroupStatus, result_),
  };
  ResponseSetGroupStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResponseSetGroupStatus_descriptor_,
      ResponseSetGroupStatus::default_instance_,
      ResponseSetGroupStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseSetGroupStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseSetGroupStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResponseSetGroupStatus));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_group_5fpackage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestCreateGroup_descriptor_, &RequestCreateGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseCreateGroup_descriptor_, &ResponseCreateGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestDismissGroup_descriptor_, &RequestDismissGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseDismissGroup_descriptor_, &ResponseDismissGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestJoinGroup_descriptor_, &RequestJoinGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseJoinGroup_descriptor_, &ResponseJoinGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestQuitGroup_descriptor_, &RequestQuitGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseQuitGroup_descriptor_, &ResponseQuitGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMsgGroup_descriptor_, &RequestMsgGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseMsgGroup_descriptor_, &ResponseMsgGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestBroadcastGroup_descriptor_, &RequestBroadcastGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseBroadcastGroup_descriptor_, &ResponseBroadcastGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseRegisterChat_descriptor_, &ResponseRegisterChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestGetGroupInfo_descriptor_, &RequestGetGroupInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GroupMember_descriptor_, &GroupMember::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseGetGroupInfo_descriptor_, &ResponseGetGroupInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestSetGroupStatus_descriptor_, &RequestSetGroupStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResponseSetGroupStatus_descriptor_, &ResponseSetGroupStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_group_5fpackage_2eproto() {
  delete RequestCreateGroup::default_instance_;
  delete RequestCreateGroup_reflection_;
  delete ResponseCreateGroup::default_instance_;
  delete ResponseCreateGroup_reflection_;
  delete RequestDismissGroup::default_instance_;
  delete RequestDismissGroup_reflection_;
  delete ResponseDismissGroup::default_instance_;
  delete ResponseDismissGroup_reflection_;
  delete RequestJoinGroup::default_instance_;
  delete RequestJoinGroup_reflection_;
  delete ResponseJoinGroup::default_instance_;
  delete ResponseJoinGroup_reflection_;
  delete RequestQuitGroup::default_instance_;
  delete RequestQuitGroup_reflection_;
  delete ResponseQuitGroup::default_instance_;
  delete ResponseQuitGroup_reflection_;
  delete RequestMsgGroup::default_instance_;
  delete RequestMsgGroup_reflection_;
  delete ResponseMsgGroup::default_instance_;
  delete ResponseMsgGroup_reflection_;
  delete RequestBroadcastGroup::default_instance_;
  delete RequestBroadcastGroup_reflection_;
  delete ResponseBroadcastGroup::default_instance_;
  delete ResponseBroadcastGroup_reflection_;
  delete ResponseRegisterChat::default_instance_;
  delete ResponseRegisterChat_reflection_;
  delete RequestGetGroupInfo::default_instance_;
  delete RequestGetGroupInfo_reflection_;
  delete GroupMember::default_instance_;
  delete GroupMember_reflection_;
  delete ResponseGetGroupInfo::default_instance_;
  delete ResponseGetGroupInfo_reflection_;
  delete RequestSetGroupStatus::default_instance_;
  delete RequestSetGroupStatus_reflection_;
  delete ResponseSetGroupStatus::default_instance_;
  delete ResponseSetGroupStatus_reflection_;
}

void protobuf_AddDesc_group_5fpackage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023group_package.proto\022\005group\"7\n\022RequestC"
    "reateGroup\022\017\n\007user_id\030\001 \002(\t\022\020\n\010group_id\030"
    "\002 \002(\t\"%\n\023ResponseCreateGroup\022\016\n\006result\030\001"
    " \002(\005\"8\n\023RequestDismissGroup\022\017\n\007user_id\030\001"
    " \002(\t\022\020\n\010group_id\030\002 \002(\t\"&\n\024ResponseDismis"
    "sGroup\022\016\n\006result\030\001 \002(\005\"5\n\020RequestJoinGro"
    "up\022\017\n\007user_id\030\001 \002(\t\022\020\n\010group_id\030\002 \002(\t\"#\n"
    "\021ResponseJoinGroup\022\016\n\006result\030\001 \002(\005\"5\n\020Re"
    "questQuitGroup\022\017\n\007user_id\030\001 \002(\t\022\020\n\010group"
    "_id\030\002 \002(\t\"#\n\021ResponseQuitGroup\022\016\n\006result"
    "\030\001 \002(\005\"p\n\017RequestMsgGroup\022\021\n\tsender_id\030\001"
    " \002(\t\022\020\n\010group_id\030\002 \002(\t\022\013\n\003mid\030\003 \002(\t\022\014\n\004t"
    "ype\030\004 \002(\005\022\017\n\007content\030\005 \002(\t\022\014\n\004time\030\006 \002(\004"
    "\"[\n\020ResponseMsgGroup\022\016\n\006result\030\001 \002(\005\022\'\n\007"
    "request\030\002 \001(\0132\026.group.RequestMsgGroup\022\016\n"
    "\006recver\030\003 \003(\t\"v\n\025RequestBroadcastGroup\022\021"
    "\n\tsender_id\030\001 \002(\t\022\020\n\010group_id\030\002 \002(\t\022\013\n\003m"
    "id\030\003 \002(\t\022\014\n\004type\030\004 \002(\005\022\017\n\007content\030\005 \002(\t\022"
    "\014\n\004time\030\006 \002(\004\"g\n\026ResponseBroadcastGroup\022"
    "\016\n\006result\030\001 \002(\005\022-\n\007request\030\002 \001(\0132\034.group"
    ".RequestBroadcastGroup\022\016\n\006recver\030\003 \003(\t\"&"
    "\n\024ResponseRegisterChat\022\016\n\006result\030\001 \002(\005\"\'"
    "\n\023RequestGetGroupInfo\022\020\n\010group_id\030\001 \002(\t\""
    "A\n\013GroupMember\022\n\n\002id\030\001 \002(\t\022\023\n\013active_tim"
    "e\030\002 \002(\004\022\021\n\tjoin_time\030\003 \002(\004\"\227\001\n\024ResponseG"
    "etGroupInfo\022\016\n\006result\030\001 \002(\005\022\020\n\010group_id\030"
    "\002 \001(\t\022\017\n\007creator\030\003 \001(\t\022\016\n\006status\030\004 \001(\005\022\030"
    "\n\020last_active_time\030\005 \001(\004\022\"\n\006member\030\006 \003(\013"
    "2\022.group.GroupMember\"9\n\025RequestSetGroupS"
    "tatus\022\020\n\010group_id\030\001 \002(\t\022\016\n\006status\030\002 \002(\005\""
    "(\n\026ResponseSetGroupStatus\022\016\n\006result\030\001 \002("
    "\005", 1241);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "group_package.proto", &protobuf_RegisterTypes);
  RequestCreateGroup::default_instance_ = new RequestCreateGroup();
  ResponseCreateGroup::default_instance_ = new ResponseCreateGroup();
  RequestDismissGroup::default_instance_ = new RequestDismissGroup();
  ResponseDismissGroup::default_instance_ = new ResponseDismissGroup();
  RequestJoinGroup::default_instance_ = new RequestJoinGroup();
  ResponseJoinGroup::default_instance_ = new ResponseJoinGroup();
  RequestQuitGroup::default_instance_ = new RequestQuitGroup();
  ResponseQuitGroup::default_instance_ = new ResponseQuitGroup();
  RequestMsgGroup::default_instance_ = new RequestMsgGroup();
  ResponseMsgGroup::default_instance_ = new ResponseMsgGroup();
  RequestBroadcastGroup::default_instance_ = new RequestBroadcastGroup();
  ResponseBroadcastGroup::default_instance_ = new ResponseBroadcastGroup();
  ResponseRegisterChat::default_instance_ = new ResponseRegisterChat();
  RequestGetGroupInfo::default_instance_ = new RequestGetGroupInfo();
  GroupMember::default_instance_ = new GroupMember();
  ResponseGetGroupInfo::default_instance_ = new ResponseGetGroupInfo();
  RequestSetGroupStatus::default_instance_ = new RequestSetGroupStatus();
  ResponseSetGroupStatus::default_instance_ = new ResponseSetGroupStatus();
  RequestCreateGroup::default_instance_->InitAsDefaultInstance();
  ResponseCreateGroup::default_instance_->InitAsDefaultInstance();
  RequestDismissGroup::default_instance_->InitAsDefaultInstance();
  ResponseDismissGroup::default_instance_->InitAsDefaultInstance();
  RequestJoinGroup::default_instance_->InitAsDefaultInstance();
  ResponseJoinGroup::default_instance_->InitAsDefaultInstance();
  RequestQuitGroup::default_instance_->InitAsDefaultInstance();
  ResponseQuitGroup::default_instance_->InitAsDefaultInstance();
  RequestMsgGroup::default_instance_->InitAsDefaultInstance();
  ResponseMsgGroup::default_instance_->InitAsDefaultInstance();
  RequestBroadcastGroup::default_instance_->InitAsDefaultInstance();
  ResponseBroadcastGroup::default_instance_->InitAsDefaultInstance();
  ResponseRegisterChat::default_instance_->InitAsDefaultInstance();
  RequestGetGroupInfo::default_instance_->InitAsDefaultInstance();
  GroupMember::default_instance_->InitAsDefaultInstance();
  ResponseGetGroupInfo::default_instance_->InitAsDefaultInstance();
  RequestSetGroupStatus::default_instance_->InitAsDefaultInstance();
  ResponseSetGroupStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_group_5fpackage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_group_5fpackage_2eproto {
  StaticDescriptorInitializer_group_5fpackage_2eproto() {
    protobuf_AddDesc_group_5fpackage_2eproto();
  }
} static_descriptor_initializer_group_5fpackage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RequestCreateGroup::kUserIdFieldNumber;
const int RequestCreateGroup::kGroupIdFieldNumber;
#endif  // !_MSC_VER

RequestCreateGroup::RequestCreateGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestCreateGroup)
}

void RequestCreateGroup::InitAsDefaultInstance() {
}

RequestCreateGroup::RequestCreateGroup(const RequestCreateGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestCreateGroup)
}

void RequestCreateGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestCreateGroup::~RequestCreateGroup() {
  // @@protoc_insertion_point(destructor:group.RequestCreateGroup)
  SharedDtor();
}

void RequestCreateGroup::SharedDtor() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (this != default_instance_) {
  }
}

void RequestCreateGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestCreateGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestCreateGroup_descriptor_;
}

const RequestCreateGroup& RequestCreateGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestCreateGroup* RequestCreateGroup::default_instance_ = NULL;

RequestCreateGroup* RequestCreateGroup::New() const {
  return new RequestCreateGroup;
}

void RequestCreateGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_user_id()) {
      if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_id_->clear();
      }
    }
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestCreateGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestCreateGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // required string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestCreateGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestCreateGroup)
  return false;
#undef DO_
}

void RequestCreateGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestCreateGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestCreateGroup)
}

::google::protobuf::uint8* RequestCreateGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestCreateGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestCreateGroup)
  return target;
}

int RequestCreateGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // required string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestCreateGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestCreateGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestCreateGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestCreateGroup::MergeFrom(const RequestCreateGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestCreateGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestCreateGroup::CopyFrom(const RequestCreateGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestCreateGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestCreateGroup::Swap(RequestCreateGroup* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(group_id_, other->group_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestCreateGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestCreateGroup_descriptor_;
  metadata.reflection = RequestCreateGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseCreateGroup::kResultFieldNumber;
#endif  // !_MSC_VER

ResponseCreateGroup::ResponseCreateGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseCreateGroup)
}

void ResponseCreateGroup::InitAsDefaultInstance() {
}

ResponseCreateGroup::ResponseCreateGroup(const ResponseCreateGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseCreateGroup)
}

void ResponseCreateGroup::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseCreateGroup::~ResponseCreateGroup() {
  // @@protoc_insertion_point(destructor:group.ResponseCreateGroup)
  SharedDtor();
}

void ResponseCreateGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseCreateGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseCreateGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseCreateGroup_descriptor_;
}

const ResponseCreateGroup& ResponseCreateGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseCreateGroup* ResponseCreateGroup::default_instance_ = NULL;

ResponseCreateGroup* ResponseCreateGroup::New() const {
  return new ResponseCreateGroup;
}

void ResponseCreateGroup::Clear() {
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseCreateGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseCreateGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseCreateGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseCreateGroup)
  return false;
#undef DO_
}

void ResponseCreateGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseCreateGroup)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseCreateGroup)
}

::google::protobuf::uint8* ResponseCreateGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseCreateGroup)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseCreateGroup)
  return target;
}

int ResponseCreateGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseCreateGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseCreateGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseCreateGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseCreateGroup::MergeFrom(const ResponseCreateGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseCreateGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseCreateGroup::CopyFrom(const ResponseCreateGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseCreateGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseCreateGroup::Swap(ResponseCreateGroup* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseCreateGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseCreateGroup_descriptor_;
  metadata.reflection = ResponseCreateGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestDismissGroup::kUserIdFieldNumber;
const int RequestDismissGroup::kGroupIdFieldNumber;
#endif  // !_MSC_VER

RequestDismissGroup::RequestDismissGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestDismissGroup)
}

void RequestDismissGroup::InitAsDefaultInstance() {
}

RequestDismissGroup::RequestDismissGroup(const RequestDismissGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestDismissGroup)
}

void RequestDismissGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestDismissGroup::~RequestDismissGroup() {
  // @@protoc_insertion_point(destructor:group.RequestDismissGroup)
  SharedDtor();
}

void RequestDismissGroup::SharedDtor() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (this != default_instance_) {
  }
}

void RequestDismissGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestDismissGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestDismissGroup_descriptor_;
}

const RequestDismissGroup& RequestDismissGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestDismissGroup* RequestDismissGroup::default_instance_ = NULL;

RequestDismissGroup* RequestDismissGroup::New() const {
  return new RequestDismissGroup;
}

void RequestDismissGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_user_id()) {
      if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_id_->clear();
      }
    }
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestDismissGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestDismissGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // required string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestDismissGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestDismissGroup)
  return false;
#undef DO_
}

void RequestDismissGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestDismissGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestDismissGroup)
}

::google::protobuf::uint8* RequestDismissGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestDismissGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestDismissGroup)
  return target;
}

int RequestDismissGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // required string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestDismissGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestDismissGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestDismissGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestDismissGroup::MergeFrom(const RequestDismissGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestDismissGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestDismissGroup::CopyFrom(const RequestDismissGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestDismissGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestDismissGroup::Swap(RequestDismissGroup* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(group_id_, other->group_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestDismissGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestDismissGroup_descriptor_;
  metadata.reflection = RequestDismissGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseDismissGroup::kResultFieldNumber;
#endif  // !_MSC_VER

ResponseDismissGroup::ResponseDismissGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseDismissGroup)
}

void ResponseDismissGroup::InitAsDefaultInstance() {
}

ResponseDismissGroup::ResponseDismissGroup(const ResponseDismissGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseDismissGroup)
}

void ResponseDismissGroup::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseDismissGroup::~ResponseDismissGroup() {
  // @@protoc_insertion_point(destructor:group.ResponseDismissGroup)
  SharedDtor();
}

void ResponseDismissGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseDismissGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseDismissGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseDismissGroup_descriptor_;
}

const ResponseDismissGroup& ResponseDismissGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseDismissGroup* ResponseDismissGroup::default_instance_ = NULL;

ResponseDismissGroup* ResponseDismissGroup::New() const {
  return new ResponseDismissGroup;
}

void ResponseDismissGroup::Clear() {
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseDismissGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseDismissGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseDismissGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseDismissGroup)
  return false;
#undef DO_
}

void ResponseDismissGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseDismissGroup)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseDismissGroup)
}

::google::protobuf::uint8* ResponseDismissGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseDismissGroup)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseDismissGroup)
  return target;
}

int ResponseDismissGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseDismissGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseDismissGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseDismissGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseDismissGroup::MergeFrom(const ResponseDismissGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseDismissGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseDismissGroup::CopyFrom(const ResponseDismissGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseDismissGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseDismissGroup::Swap(ResponseDismissGroup* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseDismissGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseDismissGroup_descriptor_;
  metadata.reflection = ResponseDismissGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestJoinGroup::kUserIdFieldNumber;
const int RequestJoinGroup::kGroupIdFieldNumber;
#endif  // !_MSC_VER

RequestJoinGroup::RequestJoinGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestJoinGroup)
}

void RequestJoinGroup::InitAsDefaultInstance() {
}

RequestJoinGroup::RequestJoinGroup(const RequestJoinGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestJoinGroup)
}

void RequestJoinGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestJoinGroup::~RequestJoinGroup() {
  // @@protoc_insertion_point(destructor:group.RequestJoinGroup)
  SharedDtor();
}

void RequestJoinGroup::SharedDtor() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (this != default_instance_) {
  }
}

void RequestJoinGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestJoinGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestJoinGroup_descriptor_;
}

const RequestJoinGroup& RequestJoinGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestJoinGroup* RequestJoinGroup::default_instance_ = NULL;

RequestJoinGroup* RequestJoinGroup::New() const {
  return new RequestJoinGroup;
}

void RequestJoinGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_user_id()) {
      if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_id_->clear();
      }
    }
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestJoinGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestJoinGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // required string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestJoinGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestJoinGroup)
  return false;
#undef DO_
}

void RequestJoinGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestJoinGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestJoinGroup)
}

::google::protobuf::uint8* RequestJoinGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestJoinGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestJoinGroup)
  return target;
}

int RequestJoinGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // required string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestJoinGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestJoinGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestJoinGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestJoinGroup::MergeFrom(const RequestJoinGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestJoinGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestJoinGroup::CopyFrom(const RequestJoinGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestJoinGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestJoinGroup::Swap(RequestJoinGroup* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(group_id_, other->group_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestJoinGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestJoinGroup_descriptor_;
  metadata.reflection = RequestJoinGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseJoinGroup::kResultFieldNumber;
#endif  // !_MSC_VER

ResponseJoinGroup::ResponseJoinGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseJoinGroup)
}

void ResponseJoinGroup::InitAsDefaultInstance() {
}

ResponseJoinGroup::ResponseJoinGroup(const ResponseJoinGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseJoinGroup)
}

void ResponseJoinGroup::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseJoinGroup::~ResponseJoinGroup() {
  // @@protoc_insertion_point(destructor:group.ResponseJoinGroup)
  SharedDtor();
}

void ResponseJoinGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseJoinGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseJoinGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseJoinGroup_descriptor_;
}

const ResponseJoinGroup& ResponseJoinGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseJoinGroup* ResponseJoinGroup::default_instance_ = NULL;

ResponseJoinGroup* ResponseJoinGroup::New() const {
  return new ResponseJoinGroup;
}

void ResponseJoinGroup::Clear() {
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseJoinGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseJoinGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseJoinGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseJoinGroup)
  return false;
#undef DO_
}

void ResponseJoinGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseJoinGroup)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseJoinGroup)
}

::google::protobuf::uint8* ResponseJoinGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseJoinGroup)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseJoinGroup)
  return target;
}

int ResponseJoinGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseJoinGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseJoinGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseJoinGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseJoinGroup::MergeFrom(const ResponseJoinGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseJoinGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseJoinGroup::CopyFrom(const ResponseJoinGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseJoinGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseJoinGroup::Swap(ResponseJoinGroup* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseJoinGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseJoinGroup_descriptor_;
  metadata.reflection = ResponseJoinGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestQuitGroup::kUserIdFieldNumber;
const int RequestQuitGroup::kGroupIdFieldNumber;
#endif  // !_MSC_VER

RequestQuitGroup::RequestQuitGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestQuitGroup)
}

void RequestQuitGroup::InitAsDefaultInstance() {
}

RequestQuitGroup::RequestQuitGroup(const RequestQuitGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestQuitGroup)
}

void RequestQuitGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestQuitGroup::~RequestQuitGroup() {
  // @@protoc_insertion_point(destructor:group.RequestQuitGroup)
  SharedDtor();
}

void RequestQuitGroup::SharedDtor() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (this != default_instance_) {
  }
}

void RequestQuitGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestQuitGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestQuitGroup_descriptor_;
}

const RequestQuitGroup& RequestQuitGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestQuitGroup* RequestQuitGroup::default_instance_ = NULL;

RequestQuitGroup* RequestQuitGroup::New() const {
  return new RequestQuitGroup;
}

void RequestQuitGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_user_id()) {
      if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_id_->clear();
      }
    }
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestQuitGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestQuitGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // required string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestQuitGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestQuitGroup)
  return false;
#undef DO_
}

void RequestQuitGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestQuitGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestQuitGroup)
}

::google::protobuf::uint8* RequestQuitGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestQuitGroup)
  // required string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestQuitGroup)
  return target;
}

int RequestQuitGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // required string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestQuitGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestQuitGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestQuitGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestQuitGroup::MergeFrom(const RequestQuitGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestQuitGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestQuitGroup::CopyFrom(const RequestQuitGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestQuitGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestQuitGroup::Swap(RequestQuitGroup* other) {
  if (other != this) {
    std::swap(user_id_, other->user_id_);
    std::swap(group_id_, other->group_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestQuitGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestQuitGroup_descriptor_;
  metadata.reflection = RequestQuitGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseQuitGroup::kResultFieldNumber;
#endif  // !_MSC_VER

ResponseQuitGroup::ResponseQuitGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseQuitGroup)
}

void ResponseQuitGroup::InitAsDefaultInstance() {
}

ResponseQuitGroup::ResponseQuitGroup(const ResponseQuitGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseQuitGroup)
}

void ResponseQuitGroup::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseQuitGroup::~ResponseQuitGroup() {
  // @@protoc_insertion_point(destructor:group.ResponseQuitGroup)
  SharedDtor();
}

void ResponseQuitGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseQuitGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseQuitGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseQuitGroup_descriptor_;
}

const ResponseQuitGroup& ResponseQuitGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseQuitGroup* ResponseQuitGroup::default_instance_ = NULL;

ResponseQuitGroup* ResponseQuitGroup::New() const {
  return new ResponseQuitGroup;
}

void ResponseQuitGroup::Clear() {
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseQuitGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseQuitGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseQuitGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseQuitGroup)
  return false;
#undef DO_
}

void ResponseQuitGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseQuitGroup)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseQuitGroup)
}

::google::protobuf::uint8* ResponseQuitGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseQuitGroup)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseQuitGroup)
  return target;
}

int ResponseQuitGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseQuitGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseQuitGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseQuitGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseQuitGroup::MergeFrom(const ResponseQuitGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseQuitGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseQuitGroup::CopyFrom(const ResponseQuitGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseQuitGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseQuitGroup::Swap(ResponseQuitGroup* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseQuitGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseQuitGroup_descriptor_;
  metadata.reflection = ResponseQuitGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestMsgGroup::kSenderIdFieldNumber;
const int RequestMsgGroup::kGroupIdFieldNumber;
const int RequestMsgGroup::kMidFieldNumber;
const int RequestMsgGroup::kTypeFieldNumber;
const int RequestMsgGroup::kContentFieldNumber;
const int RequestMsgGroup::kTimeFieldNumber;
#endif  // !_MSC_VER

RequestMsgGroup::RequestMsgGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestMsgGroup)
}

void RequestMsgGroup::InitAsDefaultInstance() {
}

RequestMsgGroup::RequestMsgGroup(const RequestMsgGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestMsgGroup)
}

void RequestMsgGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sender_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMsgGroup::~RequestMsgGroup() {
  // @@protoc_insertion_point(destructor:group.RequestMsgGroup)
  SharedDtor();
}

void RequestMsgGroup::SharedDtor() {
  if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_id_;
  }
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mid_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void RequestMsgGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMsgGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMsgGroup_descriptor_;
}

const RequestMsgGroup& RequestMsgGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestMsgGroup* RequestMsgGroup::default_instance_ = NULL;

RequestMsgGroup* RequestMsgGroup::New() const {
  return new RequestMsgGroup;
}

void RequestMsgGroup::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestMsgGroup*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(time_, type_);
    if (has_sender_id()) {
      if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sender_id_->clear();
      }
    }
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
    if (has_mid()) {
      if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mid_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMsgGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestMsgGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sender_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_id().data(), this->sender_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sender_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // required string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mid;
        break;
      }

      // required string mid = 3;
      case 3: {
        if (tag == 26) {
         parse_mid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // required int32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // required string content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // required uint64 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestMsgGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestMsgGroup)
  return false;
#undef DO_
}

void RequestMsgGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestMsgGroup)
  // required string sender_id = 1;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_id().data(), this->sender_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sender_id(), output);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // required string mid = 3;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mid(), output);
  }

  // required int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // required string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // required uint64 time = 6;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestMsgGroup)
}

::google::protobuf::uint8* RequestMsgGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestMsgGroup)
  // required string sender_id = 1;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_id().data(), this->sender_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sender_id(), target);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // required string mid = 3;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mid(), target);
  }

  // required int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // required string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // required uint64 time = 6;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestMsgGroup)
  return target;
}

int RequestMsgGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sender_id = 1;
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_id());
    }

    // required string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

    // required string mid = 3;
    if (has_mid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mid());
    }

    // required int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // required uint64 time = 6;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMsgGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMsgGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMsgGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMsgGroup::MergeFrom(const RequestMsgGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
    if (from.has_mid()) {
      set_mid(from.mid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMsgGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMsgGroup::CopyFrom(const RequestMsgGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMsgGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void RequestMsgGroup::Swap(RequestMsgGroup* other) {
  if (other != this) {
    std::swap(sender_id_, other->sender_id_);
    std::swap(group_id_, other->group_id_);
    std::swap(mid_, other->mid_);
    std::swap(type_, other->type_);
    std::swap(content_, other->content_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMsgGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMsgGroup_descriptor_;
  metadata.reflection = RequestMsgGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseMsgGroup::kResultFieldNumber;
const int ResponseMsgGroup::kRequestFieldNumber;
const int ResponseMsgGroup::kRecverFieldNumber;
#endif  // !_MSC_VER

ResponseMsgGroup::ResponseMsgGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseMsgGroup)
}

void ResponseMsgGroup::InitAsDefaultInstance() {
  request_ = const_cast< ::group::RequestMsgGroup*>(&::group::RequestMsgGroup::default_instance());
}

ResponseMsgGroup::ResponseMsgGroup(const ResponseMsgGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseMsgGroup)
}

void ResponseMsgGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseMsgGroup::~ResponseMsgGroup() {
  // @@protoc_insertion_point(destructor:group.ResponseMsgGroup)
  SharedDtor();
}

void ResponseMsgGroup::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
  }
}

void ResponseMsgGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseMsgGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseMsgGroup_descriptor_;
}

const ResponseMsgGroup& ResponseMsgGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseMsgGroup* ResponseMsgGroup::default_instance_ = NULL;

ResponseMsgGroup* ResponseMsgGroup::New() const {
  return new ResponseMsgGroup;
}

void ResponseMsgGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 0;
    if (has_request()) {
      if (request_ != NULL) request_->::group::RequestMsgGroup::Clear();
    }
  }
  recver_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseMsgGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseMsgGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // optional .group.RequestMsgGroup request = 2;
      case 2: {
        if (tag == 18) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_recver;
        break;
      }

      // repeated string recver = 3;
      case 3: {
        if (tag == 26) {
         parse_recver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_recver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recver(this->recver_size() - 1).data(),
            this->recver(this->recver_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "recver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_recver;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseMsgGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseMsgGroup)
  return false;
#undef DO_
}

void ResponseMsgGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseMsgGroup)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .group.RequestMsgGroup request = 2;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->request(), output);
  }

  // repeated string recver = 3;
  for (int i = 0; i < this->recver_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->recver(i).data(), this->recver(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "recver");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->recver(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseMsgGroup)
}

::google::protobuf::uint8* ResponseMsgGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseMsgGroup)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .group.RequestMsgGroup request = 2;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->request(), target);
  }

  // repeated string recver = 3;
  for (int i = 0; i < this->recver_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recver(i).data(), this->recver(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recver");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->recver(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseMsgGroup)
  return target;
}

int ResponseMsgGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .group.RequestMsgGroup request = 2;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

  }
  // repeated string recver = 3;
  total_size += 1 * this->recver_size();
  for (int i = 0; i < this->recver_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->recver(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseMsgGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseMsgGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseMsgGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseMsgGroup::MergeFrom(const ResponseMsgGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  recver_.MergeFrom(from.recver_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_request()) {
      mutable_request()->::group::RequestMsgGroup::MergeFrom(from.request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseMsgGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseMsgGroup::CopyFrom(const ResponseMsgGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMsgGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_request()) {
    if (!this->request().IsInitialized()) return false;
  }
  return true;
}

void ResponseMsgGroup::Swap(ResponseMsgGroup* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(request_, other->request_);
    recver_.Swap(&other->recver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseMsgGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseMsgGroup_descriptor_;
  metadata.reflection = ResponseMsgGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestBroadcastGroup::kSenderIdFieldNumber;
const int RequestBroadcastGroup::kGroupIdFieldNumber;
const int RequestBroadcastGroup::kMidFieldNumber;
const int RequestBroadcastGroup::kTypeFieldNumber;
const int RequestBroadcastGroup::kContentFieldNumber;
const int RequestBroadcastGroup::kTimeFieldNumber;
#endif  // !_MSC_VER

RequestBroadcastGroup::RequestBroadcastGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestBroadcastGroup)
}

void RequestBroadcastGroup::InitAsDefaultInstance() {
}

RequestBroadcastGroup::RequestBroadcastGroup(const RequestBroadcastGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestBroadcastGroup)
}

void RequestBroadcastGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sender_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestBroadcastGroup::~RequestBroadcastGroup() {
  // @@protoc_insertion_point(destructor:group.RequestBroadcastGroup)
  SharedDtor();
}

void RequestBroadcastGroup::SharedDtor() {
  if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_id_;
  }
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mid_;
  }
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void RequestBroadcastGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestBroadcastGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestBroadcastGroup_descriptor_;
}

const RequestBroadcastGroup& RequestBroadcastGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestBroadcastGroup* RequestBroadcastGroup::default_instance_ = NULL;

RequestBroadcastGroup* RequestBroadcastGroup::New() const {
  return new RequestBroadcastGroup;
}

void RequestBroadcastGroup::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestBroadcastGroup*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(time_, type_);
    if (has_sender_id()) {
      if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sender_id_->clear();
      }
    }
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
    if (has_mid()) {
      if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mid_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestBroadcastGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestBroadcastGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sender_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_id().data(), this->sender_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sender_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // required string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mid;
        break;
      }

      // required string mid = 3;
      case 3: {
        if (tag == 26) {
         parse_mid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // required int32 type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // required string content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // required uint64 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestBroadcastGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestBroadcastGroup)
  return false;
#undef DO_
}

void RequestBroadcastGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestBroadcastGroup)
  // required string sender_id = 1;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_id().data(), this->sender_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sender_id(), output);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // required string mid = 3;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mid(), output);
  }

  // required int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // required string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // required uint64 time = 6;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestBroadcastGroup)
}

::google::protobuf::uint8* RequestBroadcastGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestBroadcastGroup)
  // required string sender_id = 1;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_id().data(), this->sender_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sender_id(), target);
  }

  // required string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // required string mid = 3;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mid(), target);
  }

  // required int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // required string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // required uint64 time = 6;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestBroadcastGroup)
  return target;
}

int RequestBroadcastGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string sender_id = 1;
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_id());
    }

    // required string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

    // required string mid = 3;
    if (has_mid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mid());
    }

    // required int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // required uint64 time = 6;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestBroadcastGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestBroadcastGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestBroadcastGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestBroadcastGroup::MergeFrom(const RequestBroadcastGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
    if (from.has_mid()) {
      set_mid(from.mid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestBroadcastGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestBroadcastGroup::CopyFrom(const RequestBroadcastGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestBroadcastGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void RequestBroadcastGroup::Swap(RequestBroadcastGroup* other) {
  if (other != this) {
    std::swap(sender_id_, other->sender_id_);
    std::swap(group_id_, other->group_id_);
    std::swap(mid_, other->mid_);
    std::swap(type_, other->type_);
    std::swap(content_, other->content_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestBroadcastGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestBroadcastGroup_descriptor_;
  metadata.reflection = RequestBroadcastGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseBroadcastGroup::kResultFieldNumber;
const int ResponseBroadcastGroup::kRequestFieldNumber;
const int ResponseBroadcastGroup::kRecverFieldNumber;
#endif  // !_MSC_VER

ResponseBroadcastGroup::ResponseBroadcastGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseBroadcastGroup)
}

void ResponseBroadcastGroup::InitAsDefaultInstance() {
  request_ = const_cast< ::group::RequestBroadcastGroup*>(&::group::RequestBroadcastGroup::default_instance());
}

ResponseBroadcastGroup::ResponseBroadcastGroup(const ResponseBroadcastGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseBroadcastGroup)
}

void ResponseBroadcastGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseBroadcastGroup::~ResponseBroadcastGroup() {
  // @@protoc_insertion_point(destructor:group.ResponseBroadcastGroup)
  SharedDtor();
}

void ResponseBroadcastGroup::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
  }
}

void ResponseBroadcastGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseBroadcastGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseBroadcastGroup_descriptor_;
}

const ResponseBroadcastGroup& ResponseBroadcastGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseBroadcastGroup* ResponseBroadcastGroup::default_instance_ = NULL;

ResponseBroadcastGroup* ResponseBroadcastGroup::New() const {
  return new ResponseBroadcastGroup;
}

void ResponseBroadcastGroup::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    result_ = 0;
    if (has_request()) {
      if (request_ != NULL) request_->::group::RequestBroadcastGroup::Clear();
    }
  }
  recver_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseBroadcastGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseBroadcastGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // optional .group.RequestBroadcastGroup request = 2;
      case 2: {
        if (tag == 18) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_recver;
        break;
      }

      // repeated string recver = 3;
      case 3: {
        if (tag == 26) {
         parse_recver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_recver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recver(this->recver_size() - 1).data(),
            this->recver(this->recver_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "recver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_recver;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseBroadcastGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseBroadcastGroup)
  return false;
#undef DO_
}

void ResponseBroadcastGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseBroadcastGroup)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .group.RequestBroadcastGroup request = 2;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->request(), output);
  }

  // repeated string recver = 3;
  for (int i = 0; i < this->recver_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->recver(i).data(), this->recver(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "recver");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->recver(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseBroadcastGroup)
}

::google::protobuf::uint8* ResponseBroadcastGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseBroadcastGroup)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .group.RequestBroadcastGroup request = 2;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->request(), target);
  }

  // repeated string recver = 3;
  for (int i = 0; i < this->recver_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recver(i).data(), this->recver(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "recver");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->recver(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseBroadcastGroup)
  return target;
}

int ResponseBroadcastGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .group.RequestBroadcastGroup request = 2;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

  }
  // repeated string recver = 3;
  total_size += 1 * this->recver_size();
  for (int i = 0; i < this->recver_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->recver(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseBroadcastGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseBroadcastGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseBroadcastGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseBroadcastGroup::MergeFrom(const ResponseBroadcastGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  recver_.MergeFrom(from.recver_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_request()) {
      mutable_request()->::group::RequestBroadcastGroup::MergeFrom(from.request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseBroadcastGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseBroadcastGroup::CopyFrom(const ResponseBroadcastGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseBroadcastGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_request()) {
    if (!this->request().IsInitialized()) return false;
  }
  return true;
}

void ResponseBroadcastGroup::Swap(ResponseBroadcastGroup* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(request_, other->request_);
    recver_.Swap(&other->recver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseBroadcastGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseBroadcastGroup_descriptor_;
  metadata.reflection = ResponseBroadcastGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseRegisterChat::kResultFieldNumber;
#endif  // !_MSC_VER

ResponseRegisterChat::ResponseRegisterChat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseRegisterChat)
}

void ResponseRegisterChat::InitAsDefaultInstance() {
}

ResponseRegisterChat::ResponseRegisterChat(const ResponseRegisterChat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseRegisterChat)
}

void ResponseRegisterChat::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseRegisterChat::~ResponseRegisterChat() {
  // @@protoc_insertion_point(destructor:group.ResponseRegisterChat)
  SharedDtor();
}

void ResponseRegisterChat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseRegisterChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseRegisterChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseRegisterChat_descriptor_;
}

const ResponseRegisterChat& ResponseRegisterChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseRegisterChat* ResponseRegisterChat::default_instance_ = NULL;

ResponseRegisterChat* ResponseRegisterChat::New() const {
  return new ResponseRegisterChat;
}

void ResponseRegisterChat::Clear() {
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseRegisterChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseRegisterChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseRegisterChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseRegisterChat)
  return false;
#undef DO_
}

void ResponseRegisterChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseRegisterChat)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseRegisterChat)
}

::google::protobuf::uint8* ResponseRegisterChat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseRegisterChat)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseRegisterChat)
  return target;
}

int ResponseRegisterChat::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseRegisterChat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseRegisterChat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseRegisterChat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseRegisterChat::MergeFrom(const ResponseRegisterChat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseRegisterChat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseRegisterChat::CopyFrom(const ResponseRegisterChat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseRegisterChat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseRegisterChat::Swap(ResponseRegisterChat* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseRegisterChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseRegisterChat_descriptor_;
  metadata.reflection = ResponseRegisterChat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestGetGroupInfo::kGroupIdFieldNumber;
#endif  // !_MSC_VER

RequestGetGroupInfo::RequestGetGroupInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestGetGroupInfo)
}

void RequestGetGroupInfo::InitAsDefaultInstance() {
}

RequestGetGroupInfo::RequestGetGroupInfo(const RequestGetGroupInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestGetGroupInfo)
}

void RequestGetGroupInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestGetGroupInfo::~RequestGetGroupInfo() {
  // @@protoc_insertion_point(destructor:group.RequestGetGroupInfo)
  SharedDtor();
}

void RequestGetGroupInfo::SharedDtor() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (this != default_instance_) {
  }
}

void RequestGetGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestGetGroupInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestGetGroupInfo_descriptor_;
}

const RequestGetGroupInfo& RequestGetGroupInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestGetGroupInfo* RequestGetGroupInfo::default_instance_ = NULL;

RequestGetGroupInfo* RequestGetGroupInfo::New() const {
  return new RequestGetGroupInfo;
}

void RequestGetGroupInfo::Clear() {
  if (has_group_id()) {
    if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      group_id_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestGetGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestGetGroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestGetGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestGetGroupInfo)
  return false;
#undef DO_
}

void RequestGetGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestGetGroupInfo)
  // required string group_id = 1;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestGetGroupInfo)
}

::google::protobuf::uint8* RequestGetGroupInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestGetGroupInfo)
  // required string group_id = 1;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestGetGroupInfo)
  return target;
}

int RequestGetGroupInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string group_id = 1;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestGetGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestGetGroupInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestGetGroupInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestGetGroupInfo::MergeFrom(const RequestGetGroupInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestGetGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestGetGroupInfo::CopyFrom(const RequestGetGroupInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGetGroupInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestGetGroupInfo::Swap(RequestGetGroupInfo* other) {
  if (other != this) {
    std::swap(group_id_, other->group_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestGetGroupInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestGetGroupInfo_descriptor_;
  metadata.reflection = RequestGetGroupInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GroupMember::kIdFieldNumber;
const int GroupMember::kActiveTimeFieldNumber;
const int GroupMember::kJoinTimeFieldNumber;
#endif  // !_MSC_VER

GroupMember::GroupMember()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.GroupMember)
}

void GroupMember::InitAsDefaultInstance() {
}

GroupMember::GroupMember(const GroupMember& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.GroupMember)
}

void GroupMember::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_time_ = GOOGLE_ULONGLONG(0);
  join_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GroupMember::~GroupMember() {
  // @@protoc_insertion_point(destructor:group.GroupMember)
  SharedDtor();
}

void GroupMember::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void GroupMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GroupMember_descriptor_;
}

const GroupMember& GroupMember::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

GroupMember* GroupMember::default_instance_ = NULL;

GroupMember* GroupMember::New() const {
  return new GroupMember;
}

void GroupMember::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GroupMember*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(active_time_, join_time_);
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GroupMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.GroupMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_active_time;
        break;
      }

      // required uint64 active_time = 2;
      case 2: {
        if (tag == 16) {
         parse_active_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &active_time_)));
          set_has_active_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_join_time;
        break;
      }

      // required uint64 join_time = 3;
      case 3: {
        if (tag == 24) {
         parse_join_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &join_time_)));
          set_has_join_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.GroupMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.GroupMember)
  return false;
#undef DO_
}

void GroupMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.GroupMember)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required uint64 active_time = 2;
  if (has_active_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->active_time(), output);
  }

  // required uint64 join_time = 3;
  if (has_join_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->join_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.GroupMember)
}

::google::protobuf::uint8* GroupMember::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.GroupMember)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required uint64 active_time = 2;
  if (has_active_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->active_time(), target);
  }

  // required uint64 join_time = 3;
  if (has_join_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->join_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.GroupMember)
  return target;
}

int GroupMember::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required uint64 active_time = 2;
    if (has_active_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->active_time());
    }

    // required uint64 join_time = 3;
    if (has_join_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->join_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupMember::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GroupMember* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GroupMember*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GroupMember::MergeFrom(const GroupMember& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_active_time()) {
      set_active_time(from.active_time());
    }
    if (from.has_join_time()) {
      set_join_time(from.join_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GroupMember::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupMember::CopyFrom(const GroupMember& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMember::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GroupMember::Swap(GroupMember* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(active_time_, other->active_time_);
    std::swap(join_time_, other->join_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GroupMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GroupMember_descriptor_;
  metadata.reflection = GroupMember_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseGetGroupInfo::kResultFieldNumber;
const int ResponseGetGroupInfo::kGroupIdFieldNumber;
const int ResponseGetGroupInfo::kCreatorFieldNumber;
const int ResponseGetGroupInfo::kStatusFieldNumber;
const int ResponseGetGroupInfo::kLastActiveTimeFieldNumber;
const int ResponseGetGroupInfo::kMemberFieldNumber;
#endif  // !_MSC_VER

ResponseGetGroupInfo::ResponseGetGroupInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseGetGroupInfo)
}

void ResponseGetGroupInfo::InitAsDefaultInstance() {
}

ResponseGetGroupInfo::ResponseGetGroupInfo(const ResponseGetGroupInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseGetGroupInfo)
}

void ResponseGetGroupInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  last_active_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseGetGroupInfo::~ResponseGetGroupInfo() {
  // @@protoc_insertion_point(destructor:group.ResponseGetGroupInfo)
  SharedDtor();
}

void ResponseGetGroupInfo::SharedDtor() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (creator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete creator_;
  }
  if (this != default_instance_) {
  }
}

void ResponseGetGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseGetGroupInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseGetGroupInfo_descriptor_;
}

const ResponseGetGroupInfo& ResponseGetGroupInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseGetGroupInfo* ResponseGetGroupInfo::default_instance_ = NULL;

ResponseGetGroupInfo* ResponseGetGroupInfo::New() const {
  return new ResponseGetGroupInfo;
}

void ResponseGetGroupInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ResponseGetGroupInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(result_, status_);
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
    if (has_creator()) {
      if (creator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        creator_->clear();
      }
    }
    last_active_time_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  member_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseGetGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseGetGroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_id;
        break;
      }

      // optional string group_id = 2;
      case 2: {
        if (tag == 18) {
         parse_group_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_creator;
        break;
      }

      // optional string creator = 3;
      case 3: {
        if (tag == 26) {
         parse_creator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creator().data(), this->creator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "creator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional int32 status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_last_active_time;
        break;
      }

      // optional uint64 last_active_time = 5;
      case 5: {
        if (tag == 40) {
         parse_last_active_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_active_time_)));
          set_has_last_active_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_member;
        break;
      }

      // repeated .group.GroupMember member = 6;
      case 6: {
        if (tag == 50) {
         parse_member:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_member()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_member;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseGetGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseGetGroupInfo)
  return false;
#undef DO_
}

void ResponseGetGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseGetGroupInfo)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_id(), output);
  }

  // optional string creator = 3;
  if (has_creator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creator().data(), this->creator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "creator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->creator(), output);
  }

  // optional int32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }

  // optional uint64 last_active_time = 5;
  if (has_last_active_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->last_active_time(), output);
  }

  // repeated .group.GroupMember member = 6;
  for (int i = 0; i < this->member_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->member(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseGetGroupInfo)
}

::google::protobuf::uint8* ResponseGetGroupInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseGetGroupInfo)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string group_id = 2;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_id(), target);
  }

  // optional string creator = 3;
  if (has_creator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creator().data(), this->creator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "creator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->creator(), target);
  }

  // optional int32 status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }

  // optional uint64 last_active_time = 5;
  if (has_last_active_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->last_active_time(), target);
  }

  // repeated .group.GroupMember member = 6;
  for (int i = 0; i < this->member_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->member(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseGetGroupInfo)
  return target;
}

int ResponseGetGroupInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string group_id = 2;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

    // optional string creator = 3;
    if (has_creator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creator());
    }

    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional uint64 last_active_time = 5;
    if (has_last_active_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_active_time());
    }

  }
  // repeated .group.GroupMember member = 6;
  total_size += 1 * this->member_size();
  for (int i = 0; i < this->member_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->member(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseGetGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseGetGroupInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseGetGroupInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseGetGroupInfo::MergeFrom(const ResponseGetGroupInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_.MergeFrom(from.member_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
    if (from.has_creator()) {
      set_creator(from.creator());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_last_active_time()) {
      set_last_active_time(from.last_active_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseGetGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseGetGroupInfo::CopyFrom(const ResponseGetGroupInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseGetGroupInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->member())) return false;
  return true;
}

void ResponseGetGroupInfo::Swap(ResponseGetGroupInfo* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(group_id_, other->group_id_);
    std::swap(creator_, other->creator_);
    std::swap(status_, other->status_);
    std::swap(last_active_time_, other->last_active_time_);
    member_.Swap(&other->member_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseGetGroupInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseGetGroupInfo_descriptor_;
  metadata.reflection = ResponseGetGroupInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestSetGroupStatus::kGroupIdFieldNumber;
const int RequestSetGroupStatus::kStatusFieldNumber;
#endif  // !_MSC_VER

RequestSetGroupStatus::RequestSetGroupStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.RequestSetGroupStatus)
}

void RequestSetGroupStatus::InitAsDefaultInstance() {
}

RequestSetGroupStatus::RequestSetGroupStatus(const RequestSetGroupStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.RequestSetGroupStatus)
}

void RequestSetGroupStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestSetGroupStatus::~RequestSetGroupStatus() {
  // @@protoc_insertion_point(destructor:group.RequestSetGroupStatus)
  SharedDtor();
}

void RequestSetGroupStatus::SharedDtor() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (this != default_instance_) {
  }
}

void RequestSetGroupStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestSetGroupStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestSetGroupStatus_descriptor_;
}

const RequestSetGroupStatus& RequestSetGroupStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

RequestSetGroupStatus* RequestSetGroupStatus::default_instance_ = NULL;

RequestSetGroupStatus* RequestSetGroupStatus::New() const {
  return new RequestSetGroupStatus;
}

void RequestSetGroupStatus::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_group_id()) {
      if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        group_id_->clear();
      }
    }
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestSetGroupStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.RequestSetGroupStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), this->group_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required int32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.RequestSetGroupStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.RequestSetGroupStatus)
  return false;
#undef DO_
}

void RequestSetGroupStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.RequestSetGroupStatus)
  // required string group_id = 1;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // required int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.RequestSetGroupStatus)
}

::google::protobuf::uint8* RequestSetGroupStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.RequestSetGroupStatus)
  // required string group_id = 1;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), this->group_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // required int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.RequestSetGroupStatus)
  return target;
}

int RequestSetGroupStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string group_id = 1;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_id());
    }

    // required int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestSetGroupStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestSetGroupStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestSetGroupStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestSetGroupStatus::MergeFrom(const RequestSetGroupStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestSetGroupStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestSetGroupStatus::CopyFrom(const RequestSetGroupStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestSetGroupStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RequestSetGroupStatus::Swap(RequestSetGroupStatus* other) {
  if (other != this) {
    std::swap(group_id_, other->group_id_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestSetGroupStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestSetGroupStatus_descriptor_;
  metadata.reflection = RequestSetGroupStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResponseSetGroupStatus::kResultFieldNumber;
#endif  // !_MSC_VER

ResponseSetGroupStatus::ResponseSetGroupStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:group.ResponseSetGroupStatus)
}

void ResponseSetGroupStatus::InitAsDefaultInstance() {
}

ResponseSetGroupStatus::ResponseSetGroupStatus(const ResponseSetGroupStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:group.ResponseSetGroupStatus)
}

void ResponseSetGroupStatus::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseSetGroupStatus::~ResponseSetGroupStatus() {
  // @@protoc_insertion_point(destructor:group.ResponseSetGroupStatus)
  SharedDtor();
}

void ResponseSetGroupStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseSetGroupStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseSetGroupStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseSetGroupStatus_descriptor_;
}

const ResponseSetGroupStatus& ResponseSetGroupStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_group_5fpackage_2eproto();
  return *default_instance_;
}

ResponseSetGroupStatus* ResponseSetGroupStatus::default_instance_ = NULL;

ResponseSetGroupStatus* ResponseSetGroupStatus::New() const {
  return new ResponseSetGroupStatus;
}

void ResponseSetGroupStatus::Clear() {
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResponseSetGroupStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:group.ResponseSetGroupStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:group.ResponseSetGroupStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:group.ResponseSetGroupStatus)
  return false;
#undef DO_
}

void ResponseSetGroupStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:group.ResponseSetGroupStatus)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:group.ResponseSetGroupStatus)
}

::google::protobuf::uint8* ResponseSetGroupStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:group.ResponseSetGroupStatus)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:group.ResponseSetGroupStatus)
  return target;
}

int ResponseSetGroupStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseSetGroupStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResponseSetGroupStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResponseSetGroupStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseSetGroupStatus::MergeFrom(const ResponseSetGroupStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResponseSetGroupStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseSetGroupStatus::CopyFrom(const ResponseSetGroupStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseSetGroupStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseSetGroupStatus::Swap(ResponseSetGroupStatus* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResponseSetGroupStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseSetGroupStatus_descriptor_;
  metadata.reflection = ResponseSetGroupStatus_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace group

// @@protoc_insertion_point(global_scope)

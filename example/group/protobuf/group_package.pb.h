// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group_package.proto

#ifndef PROTOBUF_group_5fpackage_2eproto__INCLUDED
#define PROTOBUF_group_5fpackage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace group {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_group_5fpackage_2eproto();
void protobuf_AssignDesc_group_5fpackage_2eproto();
void protobuf_ShutdownFile_group_5fpackage_2eproto();

class RequestCreateGroup;
class ResponseCreateGroup;
class RequestDismissGroup;
class ResponseDismissGroup;
class RequestJoinGroup;
class ResponseJoinGroup;
class RequestQuitGroup;
class ResponseQuitGroup;
class RequestMsgGroup;
class ResponseMsgGroup;
class RequestBroadcastGroup;
class ResponseBroadcastGroup;
class ResponseRegisterChat;
class RequestGetGroupInfo;
class GroupMember;
class ResponseGetGroupInfo;
class RequestSetGroupStatus;
class ResponseSetGroupStatus;

// ===================================================================

class RequestCreateGroup : public ::google::protobuf::Message {
 public:
  RequestCreateGroup();
  virtual ~RequestCreateGroup();

  RequestCreateGroup(const RequestCreateGroup& from);

  inline RequestCreateGroup& operator=(const RequestCreateGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCreateGroup& default_instance();

  void Swap(RequestCreateGroup* other);

  // implements Message ----------------------------------------------

  RequestCreateGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCreateGroup& from);
  void MergeFrom(const RequestCreateGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  inline void set_allocated_user_id(::std::string* user_id);

  // required string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:group.RequestCreateGroup)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_id_;
  ::std::string* group_id_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestCreateGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseCreateGroup : public ::google::protobuf::Message {
 public:
  ResponseCreateGroup();
  virtual ~ResponseCreateGroup();

  ResponseCreateGroup(const ResponseCreateGroup& from);

  inline ResponseCreateGroup& operator=(const ResponseCreateGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseCreateGroup& default_instance();

  void Swap(ResponseCreateGroup* other);

  // implements Message ----------------------------------------------

  ResponseCreateGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseCreateGroup& from);
  void MergeFrom(const ResponseCreateGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.ResponseCreateGroup)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseCreateGroup* default_instance_;
};
// -------------------------------------------------------------------

class RequestDismissGroup : public ::google::protobuf::Message {
 public:
  RequestDismissGroup();
  virtual ~RequestDismissGroup();

  RequestDismissGroup(const RequestDismissGroup& from);

  inline RequestDismissGroup& operator=(const RequestDismissGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestDismissGroup& default_instance();

  void Swap(RequestDismissGroup* other);

  // implements Message ----------------------------------------------

  RequestDismissGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestDismissGroup& from);
  void MergeFrom(const RequestDismissGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  inline void set_allocated_user_id(::std::string* user_id);

  // required string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:group.RequestDismissGroup)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_id_;
  ::std::string* group_id_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestDismissGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseDismissGroup : public ::google::protobuf::Message {
 public:
  ResponseDismissGroup();
  virtual ~ResponseDismissGroup();

  ResponseDismissGroup(const ResponseDismissGroup& from);

  inline ResponseDismissGroup& operator=(const ResponseDismissGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseDismissGroup& default_instance();

  void Swap(ResponseDismissGroup* other);

  // implements Message ----------------------------------------------

  ResponseDismissGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseDismissGroup& from);
  void MergeFrom(const ResponseDismissGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.ResponseDismissGroup)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseDismissGroup* default_instance_;
};
// -------------------------------------------------------------------

class RequestJoinGroup : public ::google::protobuf::Message {
 public:
  RequestJoinGroup();
  virtual ~RequestJoinGroup();

  RequestJoinGroup(const RequestJoinGroup& from);

  inline RequestJoinGroup& operator=(const RequestJoinGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestJoinGroup& default_instance();

  void Swap(RequestJoinGroup* other);

  // implements Message ----------------------------------------------

  RequestJoinGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestJoinGroup& from);
  void MergeFrom(const RequestJoinGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  inline void set_allocated_user_id(::std::string* user_id);

  // required string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:group.RequestJoinGroup)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_id_;
  ::std::string* group_id_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestJoinGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseJoinGroup : public ::google::protobuf::Message {
 public:
  ResponseJoinGroup();
  virtual ~ResponseJoinGroup();

  ResponseJoinGroup(const ResponseJoinGroup& from);

  inline ResponseJoinGroup& operator=(const ResponseJoinGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseJoinGroup& default_instance();

  void Swap(ResponseJoinGroup* other);

  // implements Message ----------------------------------------------

  ResponseJoinGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseJoinGroup& from);
  void MergeFrom(const ResponseJoinGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.ResponseJoinGroup)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseJoinGroup* default_instance_;
};
// -------------------------------------------------------------------

class RequestQuitGroup : public ::google::protobuf::Message {
 public:
  RequestQuitGroup();
  virtual ~RequestQuitGroup();

  RequestQuitGroup(const RequestQuitGroup& from);

  inline RequestQuitGroup& operator=(const RequestQuitGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestQuitGroup& default_instance();

  void Swap(RequestQuitGroup* other);

  // implements Message ----------------------------------------------

  RequestQuitGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestQuitGroup& from);
  void MergeFrom(const RequestQuitGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& user_id() const;
  inline void set_user_id(const ::std::string& value);
  inline void set_user_id(const char* value);
  inline void set_user_id(const char* value, size_t size);
  inline ::std::string* mutable_user_id();
  inline ::std::string* release_user_id();
  inline void set_allocated_user_id(::std::string* user_id);

  // required string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:group.RequestQuitGroup)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_id_;
  ::std::string* group_id_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestQuitGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseQuitGroup : public ::google::protobuf::Message {
 public:
  ResponseQuitGroup();
  virtual ~ResponseQuitGroup();

  ResponseQuitGroup(const ResponseQuitGroup& from);

  inline ResponseQuitGroup& operator=(const ResponseQuitGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseQuitGroup& default_instance();

  void Swap(ResponseQuitGroup* other);

  // implements Message ----------------------------------------------

  ResponseQuitGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseQuitGroup& from);
  void MergeFrom(const ResponseQuitGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.ResponseQuitGroup)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseQuitGroup* default_instance_;
};
// -------------------------------------------------------------------

class RequestMsgGroup : public ::google::protobuf::Message {
 public:
  RequestMsgGroup();
  virtual ~RequestMsgGroup();

  RequestMsgGroup(const RequestMsgGroup& from);

  inline RequestMsgGroup& operator=(const RequestMsgGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMsgGroup& default_instance();

  void Swap(RequestMsgGroup* other);

  // implements Message ----------------------------------------------

  RequestMsgGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMsgGroup& from);
  void MergeFrom(const RequestMsgGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sender_id = 1;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  inline const ::std::string& sender_id() const;
  inline void set_sender_id(const ::std::string& value);
  inline void set_sender_id(const char* value);
  inline void set_sender_id(const char* value, size_t size);
  inline ::std::string* mutable_sender_id();
  inline ::std::string* release_sender_id();
  inline void set_allocated_sender_id(::std::string* sender_id);

  // required string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // required string mid = 3;
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 3;
  inline const ::std::string& mid() const;
  inline void set_mid(const ::std::string& value);
  inline void set_mid(const char* value);
  inline void set_mid(const char* value, size_t size);
  inline ::std::string* mutable_mid();
  inline ::std::string* release_mid();
  inline void set_allocated_mid(::std::string* mid);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required uint64 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:group.RequestMsgGroup)
 private:
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sender_id_;
  ::std::string* group_id_;
  ::std::string* mid_;
  ::std::string* content_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestMsgGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseMsgGroup : public ::google::protobuf::Message {
 public:
  ResponseMsgGroup();
  virtual ~ResponseMsgGroup();

  ResponseMsgGroup(const ResponseMsgGroup& from);

  inline ResponseMsgGroup& operator=(const ResponseMsgGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseMsgGroup& default_instance();

  void Swap(ResponseMsgGroup* other);

  // implements Message ----------------------------------------------

  ResponseMsgGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseMsgGroup& from);
  void MergeFrom(const ResponseMsgGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .group.RequestMsgGroup request = 2;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 2;
  inline const ::group::RequestMsgGroup& request() const;
  inline ::group::RequestMsgGroup* mutable_request();
  inline ::group::RequestMsgGroup* release_request();
  inline void set_allocated_request(::group::RequestMsgGroup* request);

  // repeated string recver = 3;
  inline int recver_size() const;
  inline void clear_recver();
  static const int kRecverFieldNumber = 3;
  inline const ::std::string& recver(int index) const;
  inline ::std::string* mutable_recver(int index);
  inline void set_recver(int index, const ::std::string& value);
  inline void set_recver(int index, const char* value);
  inline void set_recver(int index, const char* value, size_t size);
  inline ::std::string* add_recver();
  inline void add_recver(const ::std::string& value);
  inline void add_recver(const char* value);
  inline void add_recver(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& recver() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_recver();

  // @@protoc_insertion_point(class_scope:group.ResponseMsgGroup)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_request();
  inline void clear_has_request();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::group::RequestMsgGroup* request_;
  ::google::protobuf::RepeatedPtrField< ::std::string> recver_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseMsgGroup* default_instance_;
};
// -------------------------------------------------------------------

class RequestBroadcastGroup : public ::google::protobuf::Message {
 public:
  RequestBroadcastGroup();
  virtual ~RequestBroadcastGroup();

  RequestBroadcastGroup(const RequestBroadcastGroup& from);

  inline RequestBroadcastGroup& operator=(const RequestBroadcastGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBroadcastGroup& default_instance();

  void Swap(RequestBroadcastGroup* other);

  // implements Message ----------------------------------------------

  RequestBroadcastGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBroadcastGroup& from);
  void MergeFrom(const RequestBroadcastGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string sender_id = 1;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  inline const ::std::string& sender_id() const;
  inline void set_sender_id(const ::std::string& value);
  inline void set_sender_id(const char* value);
  inline void set_sender_id(const char* value, size_t size);
  inline ::std::string* mutable_sender_id();
  inline ::std::string* release_sender_id();
  inline void set_allocated_sender_id(::std::string* sender_id);

  // required string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // required string mid = 3;
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 3;
  inline const ::std::string& mid() const;
  inline void set_mid(const ::std::string& value);
  inline void set_mid(const char* value);
  inline void set_mid(const char* value, size_t size);
  inline ::std::string* mutable_mid();
  inline ::std::string* release_mid();
  inline void set_allocated_mid(::std::string* mid);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required uint64 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:group.RequestBroadcastGroup)
 private:
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sender_id_;
  ::std::string* group_id_;
  ::std::string* mid_;
  ::std::string* content_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestBroadcastGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseBroadcastGroup : public ::google::protobuf::Message {
 public:
  ResponseBroadcastGroup();
  virtual ~ResponseBroadcastGroup();

  ResponseBroadcastGroup(const ResponseBroadcastGroup& from);

  inline ResponseBroadcastGroup& operator=(const ResponseBroadcastGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseBroadcastGroup& default_instance();

  void Swap(ResponseBroadcastGroup* other);

  // implements Message ----------------------------------------------

  ResponseBroadcastGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseBroadcastGroup& from);
  void MergeFrom(const ResponseBroadcastGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .group.RequestBroadcastGroup request = 2;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 2;
  inline const ::group::RequestBroadcastGroup& request() const;
  inline ::group::RequestBroadcastGroup* mutable_request();
  inline ::group::RequestBroadcastGroup* release_request();
  inline void set_allocated_request(::group::RequestBroadcastGroup* request);

  // repeated string recver = 3;
  inline int recver_size() const;
  inline void clear_recver();
  static const int kRecverFieldNumber = 3;
  inline const ::std::string& recver(int index) const;
  inline ::std::string* mutable_recver(int index);
  inline void set_recver(int index, const ::std::string& value);
  inline void set_recver(int index, const char* value);
  inline void set_recver(int index, const char* value, size_t size);
  inline ::std::string* add_recver();
  inline void add_recver(const ::std::string& value);
  inline void add_recver(const char* value);
  inline void add_recver(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& recver() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_recver();

  // @@protoc_insertion_point(class_scope:group.ResponseBroadcastGroup)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_request();
  inline void clear_has_request();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::group::RequestBroadcastGroup* request_;
  ::google::protobuf::RepeatedPtrField< ::std::string> recver_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseBroadcastGroup* default_instance_;
};
// -------------------------------------------------------------------

class ResponseRegisterChat : public ::google::protobuf::Message {
 public:
  ResponseRegisterChat();
  virtual ~ResponseRegisterChat();

  ResponseRegisterChat(const ResponseRegisterChat& from);

  inline ResponseRegisterChat& operator=(const ResponseRegisterChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseRegisterChat& default_instance();

  void Swap(ResponseRegisterChat* other);

  // implements Message ----------------------------------------------

  ResponseRegisterChat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseRegisterChat& from);
  void MergeFrom(const ResponseRegisterChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.ResponseRegisterChat)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseRegisterChat* default_instance_;
};
// -------------------------------------------------------------------

class RequestGetGroupInfo : public ::google::protobuf::Message {
 public:
  RequestGetGroupInfo();
  virtual ~RequestGetGroupInfo();

  RequestGetGroupInfo(const RequestGetGroupInfo& from);

  inline RequestGetGroupInfo& operator=(const RequestGetGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestGetGroupInfo& default_instance();

  void Swap(RequestGetGroupInfo* other);

  // implements Message ----------------------------------------------

  RequestGetGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestGetGroupInfo& from);
  void MergeFrom(const RequestGetGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // @@protoc_insertion_point(class_scope:group.RequestGetGroupInfo)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* group_id_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestGetGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class GroupMember : public ::google::protobuf::Message {
 public:
  GroupMember();
  virtual ~GroupMember();

  GroupMember(const GroupMember& from);

  inline GroupMember& operator=(const GroupMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupMember& default_instance();

  void Swap(GroupMember* other);

  // implements Message ----------------------------------------------

  GroupMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupMember& from);
  void MergeFrom(const GroupMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required uint64 active_time = 2;
  inline bool has_active_time() const;
  inline void clear_active_time();
  static const int kActiveTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 active_time() const;
  inline void set_active_time(::google::protobuf::uint64 value);

  // required uint64 join_time = 3;
  inline bool has_join_time() const;
  inline void clear_join_time();
  static const int kJoinTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 join_time() const;
  inline void set_join_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:group.GroupMember)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_active_time();
  inline void clear_has_active_time();
  inline void set_has_join_time();
  inline void clear_has_join_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::uint64 active_time_;
  ::google::protobuf::uint64 join_time_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static GroupMember* default_instance_;
};
// -------------------------------------------------------------------

class ResponseGetGroupInfo : public ::google::protobuf::Message {
 public:
  ResponseGetGroupInfo();
  virtual ~ResponseGetGroupInfo();

  ResponseGetGroupInfo(const ResponseGetGroupInfo& from);

  inline ResponseGetGroupInfo& operator=(const ResponseGetGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseGetGroupInfo& default_instance();

  void Swap(ResponseGetGroupInfo* other);

  // implements Message ----------------------------------------------

  ResponseGetGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseGetGroupInfo& from);
  void MergeFrom(const ResponseGetGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // optional string creator = 3;
  inline bool has_creator() const;
  inline void clear_creator();
  static const int kCreatorFieldNumber = 3;
  inline const ::std::string& creator() const;
  inline void set_creator(const ::std::string& value);
  inline void set_creator(const char* value);
  inline void set_creator(const char* value, size_t size);
  inline ::std::string* mutable_creator();
  inline ::std::string* release_creator();
  inline void set_allocated_creator(::std::string* creator);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint64 last_active_time = 5;
  inline bool has_last_active_time() const;
  inline void clear_last_active_time();
  static const int kLastActiveTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 last_active_time() const;
  inline void set_last_active_time(::google::protobuf::uint64 value);

  // repeated .group.GroupMember member = 6;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 6;
  inline const ::group::GroupMember& member(int index) const;
  inline ::group::GroupMember* mutable_member(int index);
  inline ::group::GroupMember* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::group::GroupMember >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::group::GroupMember >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:group.ResponseGetGroupInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_creator();
  inline void clear_has_creator();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_last_active_time();
  inline void clear_has_last_active_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* group_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 status_;
  ::std::string* creator_;
  ::google::protobuf::uint64 last_active_time_;
  ::google::protobuf::RepeatedPtrField< ::group::GroupMember > member_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseGetGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestSetGroupStatus : public ::google::protobuf::Message {
 public:
  RequestSetGroupStatus();
  virtual ~RequestSetGroupStatus();

  RequestSetGroupStatus(const RequestSetGroupStatus& from);

  inline RequestSetGroupStatus& operator=(const RequestSetGroupStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestSetGroupStatus& default_instance();

  void Swap(RequestSetGroupStatus* other);

  // implements Message ----------------------------------------------

  RequestSetGroupStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestSetGroupStatus& from);
  void MergeFrom(const RequestSetGroupStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::std::string& group_id() const;
  inline void set_group_id(const ::std::string& value);
  inline void set_group_id(const char* value);
  inline void set_group_id(const char* value, size_t size);
  inline ::std::string* mutable_group_id();
  inline ::std::string* release_group_id();
  inline void set_allocated_group_id(::std::string* group_id);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.RequestSetGroupStatus)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* group_id_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static RequestSetGroupStatus* default_instance_;
};
// -------------------------------------------------------------------

class ResponseSetGroupStatus : public ::google::protobuf::Message {
 public:
  ResponseSetGroupStatus();
  virtual ~ResponseSetGroupStatus();

  ResponseSetGroupStatus(const ResponseSetGroupStatus& from);

  inline ResponseSetGroupStatus& operator=(const ResponseSetGroupStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseSetGroupStatus& default_instance();

  void Swap(ResponseSetGroupStatus* other);

  // implements Message ----------------------------------------------

  ResponseSetGroupStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseSetGroupStatus& from);
  void MergeFrom(const ResponseSetGroupStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:group.ResponseSetGroupStatus)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_group_5fpackage_2eproto();
  friend void protobuf_AssignDesc_group_5fpackage_2eproto();
  friend void protobuf_ShutdownFile_group_5fpackage_2eproto();

  void InitAsDefaultInstance();
  static ResponseSetGroupStatus* default_instance_;
};
// ===================================================================


// ===================================================================

// RequestCreateGroup

// required string user_id = 1;
inline bool RequestCreateGroup::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCreateGroup::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCreateGroup::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCreateGroup::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& RequestCreateGroup::user_id() const {
  // @@protoc_insertion_point(field_get:group.RequestCreateGroup.user_id)
  return *user_id_;
}
inline void RequestCreateGroup::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestCreateGroup.user_id)
}
inline void RequestCreateGroup::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestCreateGroup.user_id)
}
inline void RequestCreateGroup::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestCreateGroup.user_id)
}
inline ::std::string* RequestCreateGroup::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestCreateGroup.user_id)
  return user_id_;
}
inline ::std::string* RequestCreateGroup::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestCreateGroup::set_allocated_user_id(::std::string* user_id) {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (user_id) {
    set_has_user_id();
    user_id_ = user_id;
  } else {
    clear_has_user_id();
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestCreateGroup.user_id)
}

// required string group_id = 2;
inline bool RequestCreateGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestCreateGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestCreateGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestCreateGroup::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestCreateGroup::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestCreateGroup.group_id)
  return *group_id_;
}
inline void RequestCreateGroup::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestCreateGroup.group_id)
}
inline void RequestCreateGroup::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestCreateGroup.group_id)
}
inline void RequestCreateGroup::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestCreateGroup.group_id)
}
inline ::std::string* RequestCreateGroup::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestCreateGroup.group_id)
  return group_id_;
}
inline ::std::string* RequestCreateGroup::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestCreateGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestCreateGroup.group_id)
}

// -------------------------------------------------------------------

// ResponseCreateGroup

// required int32 result = 1;
inline bool ResponseCreateGroup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseCreateGroup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseCreateGroup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseCreateGroup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseCreateGroup::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseCreateGroup.result)
  return result_;
}
inline void ResponseCreateGroup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseCreateGroup.result)
}

// -------------------------------------------------------------------

// RequestDismissGroup

// required string user_id = 1;
inline bool RequestDismissGroup::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestDismissGroup::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestDismissGroup::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestDismissGroup::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& RequestDismissGroup::user_id() const {
  // @@protoc_insertion_point(field_get:group.RequestDismissGroup.user_id)
  return *user_id_;
}
inline void RequestDismissGroup::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestDismissGroup.user_id)
}
inline void RequestDismissGroup::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestDismissGroup.user_id)
}
inline void RequestDismissGroup::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestDismissGroup.user_id)
}
inline ::std::string* RequestDismissGroup::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestDismissGroup.user_id)
  return user_id_;
}
inline ::std::string* RequestDismissGroup::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestDismissGroup::set_allocated_user_id(::std::string* user_id) {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (user_id) {
    set_has_user_id();
    user_id_ = user_id;
  } else {
    clear_has_user_id();
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestDismissGroup.user_id)
}

// required string group_id = 2;
inline bool RequestDismissGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestDismissGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestDismissGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestDismissGroup::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestDismissGroup::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestDismissGroup.group_id)
  return *group_id_;
}
inline void RequestDismissGroup::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestDismissGroup.group_id)
}
inline void RequestDismissGroup::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestDismissGroup.group_id)
}
inline void RequestDismissGroup::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestDismissGroup.group_id)
}
inline ::std::string* RequestDismissGroup::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestDismissGroup.group_id)
  return group_id_;
}
inline ::std::string* RequestDismissGroup::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestDismissGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestDismissGroup.group_id)
}

// -------------------------------------------------------------------

// ResponseDismissGroup

// required int32 result = 1;
inline bool ResponseDismissGroup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseDismissGroup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseDismissGroup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseDismissGroup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseDismissGroup::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseDismissGroup.result)
  return result_;
}
inline void ResponseDismissGroup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseDismissGroup.result)
}

// -------------------------------------------------------------------

// RequestJoinGroup

// required string user_id = 1;
inline bool RequestJoinGroup::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestJoinGroup::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestJoinGroup::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestJoinGroup::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& RequestJoinGroup::user_id() const {
  // @@protoc_insertion_point(field_get:group.RequestJoinGroup.user_id)
  return *user_id_;
}
inline void RequestJoinGroup::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestJoinGroup.user_id)
}
inline void RequestJoinGroup::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestJoinGroup.user_id)
}
inline void RequestJoinGroup::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestJoinGroup.user_id)
}
inline ::std::string* RequestJoinGroup::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestJoinGroup.user_id)
  return user_id_;
}
inline ::std::string* RequestJoinGroup::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestJoinGroup::set_allocated_user_id(::std::string* user_id) {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (user_id) {
    set_has_user_id();
    user_id_ = user_id;
  } else {
    clear_has_user_id();
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestJoinGroup.user_id)
}

// required string group_id = 2;
inline bool RequestJoinGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestJoinGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestJoinGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestJoinGroup::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestJoinGroup::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestJoinGroup.group_id)
  return *group_id_;
}
inline void RequestJoinGroup::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestJoinGroup.group_id)
}
inline void RequestJoinGroup::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestJoinGroup.group_id)
}
inline void RequestJoinGroup::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestJoinGroup.group_id)
}
inline ::std::string* RequestJoinGroup::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestJoinGroup.group_id)
  return group_id_;
}
inline ::std::string* RequestJoinGroup::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestJoinGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestJoinGroup.group_id)
}

// -------------------------------------------------------------------

// ResponseJoinGroup

// required int32 result = 1;
inline bool ResponseJoinGroup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseJoinGroup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseJoinGroup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseJoinGroup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseJoinGroup::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseJoinGroup.result)
  return result_;
}
inline void ResponseJoinGroup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseJoinGroup.result)
}

// -------------------------------------------------------------------

// RequestQuitGroup

// required string user_id = 1;
inline bool RequestQuitGroup::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestQuitGroup::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestQuitGroup::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestQuitGroup::clear_user_id() {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_->clear();
  }
  clear_has_user_id();
}
inline const ::std::string& RequestQuitGroup::user_id() const {
  // @@protoc_insertion_point(field_get:group.RequestQuitGroup.user_id)
  return *user_id_;
}
inline void RequestQuitGroup::set_user_id(const ::std::string& value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestQuitGroup.user_id)
}
inline void RequestQuitGroup::set_user_id(const char* value) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestQuitGroup.user_id)
}
inline void RequestQuitGroup::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  user_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestQuitGroup.user_id)
}
inline ::std::string* RequestQuitGroup::mutable_user_id() {
  set_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestQuitGroup.user_id)
  return user_id_;
}
inline ::std::string* RequestQuitGroup::release_user_id() {
  clear_has_user_id();
  if (user_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_id_;
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestQuitGroup::set_allocated_user_id(::std::string* user_id) {
  if (user_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_id_;
  }
  if (user_id) {
    set_has_user_id();
    user_id_ = user_id;
  } else {
    clear_has_user_id();
    user_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestQuitGroup.user_id)
}

// required string group_id = 2;
inline bool RequestQuitGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestQuitGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestQuitGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestQuitGroup::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestQuitGroup::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestQuitGroup.group_id)
  return *group_id_;
}
inline void RequestQuitGroup::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestQuitGroup.group_id)
}
inline void RequestQuitGroup::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestQuitGroup.group_id)
}
inline void RequestQuitGroup::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestQuitGroup.group_id)
}
inline ::std::string* RequestQuitGroup::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestQuitGroup.group_id)
  return group_id_;
}
inline ::std::string* RequestQuitGroup::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestQuitGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestQuitGroup.group_id)
}

// -------------------------------------------------------------------

// ResponseQuitGroup

// required int32 result = 1;
inline bool ResponseQuitGroup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseQuitGroup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseQuitGroup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseQuitGroup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseQuitGroup::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseQuitGroup.result)
  return result_;
}
inline void ResponseQuitGroup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseQuitGroup.result)
}

// -------------------------------------------------------------------

// RequestMsgGroup

// required string sender_id = 1;
inline bool RequestMsgGroup::has_sender_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMsgGroup::set_has_sender_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMsgGroup::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMsgGroup::clear_sender_id() {
  if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_->clear();
  }
  clear_has_sender_id();
}
inline const ::std::string& RequestMsgGroup::sender_id() const {
  // @@protoc_insertion_point(field_get:group.RequestMsgGroup.sender_id)
  return *sender_id_;
}
inline void RequestMsgGroup::set_sender_id(const ::std::string& value) {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  sender_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestMsgGroup.sender_id)
}
inline void RequestMsgGroup::set_sender_id(const char* value) {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  sender_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestMsgGroup.sender_id)
}
inline void RequestMsgGroup::set_sender_id(const char* value, size_t size) {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  sender_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestMsgGroup.sender_id)
}
inline ::std::string* RequestMsgGroup::mutable_sender_id() {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestMsgGroup.sender_id)
  return sender_id_;
}
inline ::std::string* RequestMsgGroup::release_sender_id() {
  clear_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sender_id_;
    sender_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMsgGroup::set_allocated_sender_id(::std::string* sender_id) {
  if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_id_;
  }
  if (sender_id) {
    set_has_sender_id();
    sender_id_ = sender_id;
  } else {
    clear_has_sender_id();
    sender_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestMsgGroup.sender_id)
}

// required string group_id = 2;
inline bool RequestMsgGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestMsgGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestMsgGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestMsgGroup::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestMsgGroup::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestMsgGroup.group_id)
  return *group_id_;
}
inline void RequestMsgGroup::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestMsgGroup.group_id)
}
inline void RequestMsgGroup::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestMsgGroup.group_id)
}
inline void RequestMsgGroup::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestMsgGroup.group_id)
}
inline ::std::string* RequestMsgGroup::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestMsgGroup.group_id)
  return group_id_;
}
inline ::std::string* RequestMsgGroup::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMsgGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestMsgGroup.group_id)
}

// required string mid = 3;
inline bool RequestMsgGroup::has_mid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestMsgGroup::set_has_mid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestMsgGroup::clear_has_mid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestMsgGroup::clear_mid() {
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_->clear();
  }
  clear_has_mid();
}
inline const ::std::string& RequestMsgGroup::mid() const {
  // @@protoc_insertion_point(field_get:group.RequestMsgGroup.mid)
  return *mid_;
}
inline void RequestMsgGroup::set_mid(const ::std::string& value) {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  mid_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestMsgGroup.mid)
}
inline void RequestMsgGroup::set_mid(const char* value) {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  mid_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestMsgGroup.mid)
}
inline void RequestMsgGroup::set_mid(const char* value, size_t size) {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  mid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestMsgGroup.mid)
}
inline ::std::string* RequestMsgGroup::mutable_mid() {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestMsgGroup.mid)
  return mid_;
}
inline ::std::string* RequestMsgGroup::release_mid() {
  clear_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mid_;
    mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMsgGroup::set_allocated_mid(::std::string* mid) {
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mid_;
  }
  if (mid) {
    set_has_mid();
    mid_ = mid;
  } else {
    clear_has_mid();
    mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestMsgGroup.mid)
}

// required int32 type = 4;
inline bool RequestMsgGroup::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestMsgGroup::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestMsgGroup::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestMsgGroup::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RequestMsgGroup::type() const {
  // @@protoc_insertion_point(field_get:group.RequestMsgGroup.type)
  return type_;
}
inline void RequestMsgGroup::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:group.RequestMsgGroup.type)
}

// required string content = 5;
inline bool RequestMsgGroup::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestMsgGroup::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestMsgGroup::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestMsgGroup::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& RequestMsgGroup::content() const {
  // @@protoc_insertion_point(field_get:group.RequestMsgGroup.content)
  return *content_;
}
inline void RequestMsgGroup::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestMsgGroup.content)
}
inline void RequestMsgGroup::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestMsgGroup.content)
}
inline void RequestMsgGroup::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestMsgGroup.content)
}
inline ::std::string* RequestMsgGroup::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestMsgGroup.content)
  return content_;
}
inline ::std::string* RequestMsgGroup::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMsgGroup::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestMsgGroup.content)
}

// required uint64 time = 6;
inline bool RequestMsgGroup::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestMsgGroup::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestMsgGroup::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestMsgGroup::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RequestMsgGroup::time() const {
  // @@protoc_insertion_point(field_get:group.RequestMsgGroup.time)
  return time_;
}
inline void RequestMsgGroup::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:group.RequestMsgGroup.time)
}

// -------------------------------------------------------------------

// ResponseMsgGroup

// required int32 result = 1;
inline bool ResponseMsgGroup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseMsgGroup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseMsgGroup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseMsgGroup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseMsgGroup::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseMsgGroup.result)
  return result_;
}
inline void ResponseMsgGroup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseMsgGroup.result)
}

// optional .group.RequestMsgGroup request = 2;
inline bool ResponseMsgGroup::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseMsgGroup::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseMsgGroup::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseMsgGroup::clear_request() {
  if (request_ != NULL) request_->::group::RequestMsgGroup::Clear();
  clear_has_request();
}
inline const ::group::RequestMsgGroup& ResponseMsgGroup::request() const {
  // @@protoc_insertion_point(field_get:group.ResponseMsgGroup.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::group::RequestMsgGroup* ResponseMsgGroup::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::group::RequestMsgGroup;
  // @@protoc_insertion_point(field_mutable:group.ResponseMsgGroup.request)
  return request_;
}
inline ::group::RequestMsgGroup* ResponseMsgGroup::release_request() {
  clear_has_request();
  ::group::RequestMsgGroup* temp = request_;
  request_ = NULL;
  return temp;
}
inline void ResponseMsgGroup::set_allocated_request(::group::RequestMsgGroup* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:group.ResponseMsgGroup.request)
}

// repeated string recver = 3;
inline int ResponseMsgGroup::recver_size() const {
  return recver_.size();
}
inline void ResponseMsgGroup::clear_recver() {
  recver_.Clear();
}
inline const ::std::string& ResponseMsgGroup::recver(int index) const {
  // @@protoc_insertion_point(field_get:group.ResponseMsgGroup.recver)
  return recver_.Get(index);
}
inline ::std::string* ResponseMsgGroup::mutable_recver(int index) {
  // @@protoc_insertion_point(field_mutable:group.ResponseMsgGroup.recver)
  return recver_.Mutable(index);
}
inline void ResponseMsgGroup::set_recver(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:group.ResponseMsgGroup.recver)
  recver_.Mutable(index)->assign(value);
}
inline void ResponseMsgGroup::set_recver(int index, const char* value) {
  recver_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:group.ResponseMsgGroup.recver)
}
inline void ResponseMsgGroup::set_recver(int index, const char* value, size_t size) {
  recver_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.ResponseMsgGroup.recver)
}
inline ::std::string* ResponseMsgGroup::add_recver() {
  return recver_.Add();
}
inline void ResponseMsgGroup::add_recver(const ::std::string& value) {
  recver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:group.ResponseMsgGroup.recver)
}
inline void ResponseMsgGroup::add_recver(const char* value) {
  recver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:group.ResponseMsgGroup.recver)
}
inline void ResponseMsgGroup::add_recver(const char* value, size_t size) {
  recver_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:group.ResponseMsgGroup.recver)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResponseMsgGroup::recver() const {
  // @@protoc_insertion_point(field_list:group.ResponseMsgGroup.recver)
  return recver_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResponseMsgGroup::mutable_recver() {
  // @@protoc_insertion_point(field_mutable_list:group.ResponseMsgGroup.recver)
  return &recver_;
}

// -------------------------------------------------------------------

// RequestBroadcastGroup

// required string sender_id = 1;
inline bool RequestBroadcastGroup::has_sender_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBroadcastGroup::set_has_sender_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBroadcastGroup::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBroadcastGroup::clear_sender_id() {
  if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_->clear();
  }
  clear_has_sender_id();
}
inline const ::std::string& RequestBroadcastGroup::sender_id() const {
  // @@protoc_insertion_point(field_get:group.RequestBroadcastGroup.sender_id)
  return *sender_id_;
}
inline void RequestBroadcastGroup::set_sender_id(const ::std::string& value) {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  sender_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestBroadcastGroup.sender_id)
}
inline void RequestBroadcastGroup::set_sender_id(const char* value) {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  sender_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestBroadcastGroup.sender_id)
}
inline void RequestBroadcastGroup::set_sender_id(const char* value, size_t size) {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  sender_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestBroadcastGroup.sender_id)
}
inline ::std::string* RequestBroadcastGroup::mutable_sender_id() {
  set_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestBroadcastGroup.sender_id)
  return sender_id_;
}
inline ::std::string* RequestBroadcastGroup::release_sender_id() {
  clear_has_sender_id();
  if (sender_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sender_id_;
    sender_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestBroadcastGroup::set_allocated_sender_id(::std::string* sender_id) {
  if (sender_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_id_;
  }
  if (sender_id) {
    set_has_sender_id();
    sender_id_ = sender_id;
  } else {
    clear_has_sender_id();
    sender_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestBroadcastGroup.sender_id)
}

// required string group_id = 2;
inline bool RequestBroadcastGroup::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBroadcastGroup::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBroadcastGroup::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBroadcastGroup::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestBroadcastGroup::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestBroadcastGroup.group_id)
  return *group_id_;
}
inline void RequestBroadcastGroup::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestBroadcastGroup.group_id)
}
inline void RequestBroadcastGroup::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestBroadcastGroup.group_id)
}
inline void RequestBroadcastGroup::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestBroadcastGroup.group_id)
}
inline ::std::string* RequestBroadcastGroup::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestBroadcastGroup.group_id)
  return group_id_;
}
inline ::std::string* RequestBroadcastGroup::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestBroadcastGroup::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestBroadcastGroup.group_id)
}

// required string mid = 3;
inline bool RequestBroadcastGroup::has_mid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestBroadcastGroup::set_has_mid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestBroadcastGroup::clear_has_mid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestBroadcastGroup::clear_mid() {
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_->clear();
  }
  clear_has_mid();
}
inline const ::std::string& RequestBroadcastGroup::mid() const {
  // @@protoc_insertion_point(field_get:group.RequestBroadcastGroup.mid)
  return *mid_;
}
inline void RequestBroadcastGroup::set_mid(const ::std::string& value) {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  mid_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestBroadcastGroup.mid)
}
inline void RequestBroadcastGroup::set_mid(const char* value) {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  mid_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestBroadcastGroup.mid)
}
inline void RequestBroadcastGroup::set_mid(const char* value, size_t size) {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  mid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestBroadcastGroup.mid)
}
inline ::std::string* RequestBroadcastGroup::mutable_mid() {
  set_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestBroadcastGroup.mid)
  return mid_;
}
inline ::std::string* RequestBroadcastGroup::release_mid() {
  clear_has_mid();
  if (mid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mid_;
    mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestBroadcastGroup::set_allocated_mid(::std::string* mid) {
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mid_;
  }
  if (mid) {
    set_has_mid();
    mid_ = mid;
  } else {
    clear_has_mid();
    mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestBroadcastGroup.mid)
}

// required int32 type = 4;
inline bool RequestBroadcastGroup::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestBroadcastGroup::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestBroadcastGroup::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestBroadcastGroup::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RequestBroadcastGroup::type() const {
  // @@protoc_insertion_point(field_get:group.RequestBroadcastGroup.type)
  return type_;
}
inline void RequestBroadcastGroup::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:group.RequestBroadcastGroup.type)
}

// required string content = 5;
inline bool RequestBroadcastGroup::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestBroadcastGroup::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestBroadcastGroup::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestBroadcastGroup::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& RequestBroadcastGroup::content() const {
  // @@protoc_insertion_point(field_get:group.RequestBroadcastGroup.content)
  return *content_;
}
inline void RequestBroadcastGroup::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestBroadcastGroup.content)
}
inline void RequestBroadcastGroup::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestBroadcastGroup.content)
}
inline void RequestBroadcastGroup::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestBroadcastGroup.content)
}
inline ::std::string* RequestBroadcastGroup::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestBroadcastGroup.content)
  return content_;
}
inline ::std::string* RequestBroadcastGroup::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestBroadcastGroup::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestBroadcastGroup.content)
}

// required uint64 time = 6;
inline bool RequestBroadcastGroup::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestBroadcastGroup::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestBroadcastGroup::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestBroadcastGroup::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 RequestBroadcastGroup::time() const {
  // @@protoc_insertion_point(field_get:group.RequestBroadcastGroup.time)
  return time_;
}
inline void RequestBroadcastGroup::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:group.RequestBroadcastGroup.time)
}

// -------------------------------------------------------------------

// ResponseBroadcastGroup

// required int32 result = 1;
inline bool ResponseBroadcastGroup::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseBroadcastGroup::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseBroadcastGroup::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseBroadcastGroup::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseBroadcastGroup::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseBroadcastGroup.result)
  return result_;
}
inline void ResponseBroadcastGroup::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseBroadcastGroup.result)
}

// optional .group.RequestBroadcastGroup request = 2;
inline bool ResponseBroadcastGroup::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseBroadcastGroup::set_has_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseBroadcastGroup::clear_has_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseBroadcastGroup::clear_request() {
  if (request_ != NULL) request_->::group::RequestBroadcastGroup::Clear();
  clear_has_request();
}
inline const ::group::RequestBroadcastGroup& ResponseBroadcastGroup::request() const {
  // @@protoc_insertion_point(field_get:group.ResponseBroadcastGroup.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::group::RequestBroadcastGroup* ResponseBroadcastGroup::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::group::RequestBroadcastGroup;
  // @@protoc_insertion_point(field_mutable:group.ResponseBroadcastGroup.request)
  return request_;
}
inline ::group::RequestBroadcastGroup* ResponseBroadcastGroup::release_request() {
  clear_has_request();
  ::group::RequestBroadcastGroup* temp = request_;
  request_ = NULL;
  return temp;
}
inline void ResponseBroadcastGroup::set_allocated_request(::group::RequestBroadcastGroup* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:group.ResponseBroadcastGroup.request)
}

// repeated string recver = 3;
inline int ResponseBroadcastGroup::recver_size() const {
  return recver_.size();
}
inline void ResponseBroadcastGroup::clear_recver() {
  recver_.Clear();
}
inline const ::std::string& ResponseBroadcastGroup::recver(int index) const {
  // @@protoc_insertion_point(field_get:group.ResponseBroadcastGroup.recver)
  return recver_.Get(index);
}
inline ::std::string* ResponseBroadcastGroup::mutable_recver(int index) {
  // @@protoc_insertion_point(field_mutable:group.ResponseBroadcastGroup.recver)
  return recver_.Mutable(index);
}
inline void ResponseBroadcastGroup::set_recver(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:group.ResponseBroadcastGroup.recver)
  recver_.Mutable(index)->assign(value);
}
inline void ResponseBroadcastGroup::set_recver(int index, const char* value) {
  recver_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:group.ResponseBroadcastGroup.recver)
}
inline void ResponseBroadcastGroup::set_recver(int index, const char* value, size_t size) {
  recver_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.ResponseBroadcastGroup.recver)
}
inline ::std::string* ResponseBroadcastGroup::add_recver() {
  return recver_.Add();
}
inline void ResponseBroadcastGroup::add_recver(const ::std::string& value) {
  recver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:group.ResponseBroadcastGroup.recver)
}
inline void ResponseBroadcastGroup::add_recver(const char* value) {
  recver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:group.ResponseBroadcastGroup.recver)
}
inline void ResponseBroadcastGroup::add_recver(const char* value, size_t size) {
  recver_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:group.ResponseBroadcastGroup.recver)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResponseBroadcastGroup::recver() const {
  // @@protoc_insertion_point(field_list:group.ResponseBroadcastGroup.recver)
  return recver_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResponseBroadcastGroup::mutable_recver() {
  // @@protoc_insertion_point(field_mutable_list:group.ResponseBroadcastGroup.recver)
  return &recver_;
}

// -------------------------------------------------------------------

// ResponseRegisterChat

// required int32 result = 1;
inline bool ResponseRegisterChat::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseRegisterChat::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseRegisterChat::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseRegisterChat::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseRegisterChat::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseRegisterChat.result)
  return result_;
}
inline void ResponseRegisterChat::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseRegisterChat.result)
}

// -------------------------------------------------------------------

// RequestGetGroupInfo

// required string group_id = 1;
inline bool RequestGetGroupInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGetGroupInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGetGroupInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGetGroupInfo::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestGetGroupInfo::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestGetGroupInfo.group_id)
  return *group_id_;
}
inline void RequestGetGroupInfo::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestGetGroupInfo.group_id)
}
inline void RequestGetGroupInfo::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestGetGroupInfo.group_id)
}
inline void RequestGetGroupInfo::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestGetGroupInfo.group_id)
}
inline ::std::string* RequestGetGroupInfo::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestGetGroupInfo.group_id)
  return group_id_;
}
inline ::std::string* RequestGetGroupInfo::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestGetGroupInfo::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestGetGroupInfo.group_id)
}

// -------------------------------------------------------------------

// GroupMember

// required string id = 1;
inline bool GroupMember::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupMember::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupMember::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupMember::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& GroupMember::id() const {
  // @@protoc_insertion_point(field_get:group.GroupMember.id)
  return *id_;
}
inline void GroupMember::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:group.GroupMember.id)
}
inline void GroupMember::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.GroupMember.id)
}
inline void GroupMember::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.GroupMember.id)
}
inline ::std::string* GroupMember::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.GroupMember.id)
  return id_;
}
inline ::std::string* GroupMember::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupMember::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.GroupMember.id)
}

// required uint64 active_time = 2;
inline bool GroupMember::has_active_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupMember::set_has_active_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupMember::clear_has_active_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupMember::clear_active_time() {
  active_time_ = GOOGLE_ULONGLONG(0);
  clear_has_active_time();
}
inline ::google::protobuf::uint64 GroupMember::active_time() const {
  // @@protoc_insertion_point(field_get:group.GroupMember.active_time)
  return active_time_;
}
inline void GroupMember::set_active_time(::google::protobuf::uint64 value) {
  set_has_active_time();
  active_time_ = value;
  // @@protoc_insertion_point(field_set:group.GroupMember.active_time)
}

// required uint64 join_time = 3;
inline bool GroupMember::has_join_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupMember::set_has_join_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupMember::clear_has_join_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupMember::clear_join_time() {
  join_time_ = GOOGLE_ULONGLONG(0);
  clear_has_join_time();
}
inline ::google::protobuf::uint64 GroupMember::join_time() const {
  // @@protoc_insertion_point(field_get:group.GroupMember.join_time)
  return join_time_;
}
inline void GroupMember::set_join_time(::google::protobuf::uint64 value) {
  set_has_join_time();
  join_time_ = value;
  // @@protoc_insertion_point(field_set:group.GroupMember.join_time)
}

// -------------------------------------------------------------------

// ResponseGetGroupInfo

// required int32 result = 1;
inline bool ResponseGetGroupInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseGetGroupInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseGetGroupInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseGetGroupInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseGetGroupInfo::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseGetGroupInfo.result)
  return result_;
}
inline void ResponseGetGroupInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseGetGroupInfo.result)
}

// optional string group_id = 2;
inline bool ResponseGetGroupInfo::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseGetGroupInfo::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseGetGroupInfo::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseGetGroupInfo::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& ResponseGetGroupInfo::group_id() const {
  // @@protoc_insertion_point(field_get:group.ResponseGetGroupInfo.group_id)
  return *group_id_;
}
inline void ResponseGetGroupInfo::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.ResponseGetGroupInfo.group_id)
}
inline void ResponseGetGroupInfo::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.ResponseGetGroupInfo.group_id)
}
inline void ResponseGetGroupInfo::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.ResponseGetGroupInfo.group_id)
}
inline ::std::string* ResponseGetGroupInfo::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.ResponseGetGroupInfo.group_id)
  return group_id_;
}
inline ::std::string* ResponseGetGroupInfo::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ResponseGetGroupInfo::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.ResponseGetGroupInfo.group_id)
}

// optional string creator = 3;
inline bool ResponseGetGroupInfo::has_creator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseGetGroupInfo::set_has_creator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseGetGroupInfo::clear_has_creator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseGetGroupInfo::clear_creator() {
  if (creator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creator_->clear();
  }
  clear_has_creator();
}
inline const ::std::string& ResponseGetGroupInfo::creator() const {
  // @@protoc_insertion_point(field_get:group.ResponseGetGroupInfo.creator)
  return *creator_;
}
inline void ResponseGetGroupInfo::set_creator(const ::std::string& value) {
  set_has_creator();
  if (creator_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creator_ = new ::std::string;
  }
  creator_->assign(value);
  // @@protoc_insertion_point(field_set:group.ResponseGetGroupInfo.creator)
}
inline void ResponseGetGroupInfo::set_creator(const char* value) {
  set_has_creator();
  if (creator_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creator_ = new ::std::string;
  }
  creator_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.ResponseGetGroupInfo.creator)
}
inline void ResponseGetGroupInfo::set_creator(const char* value, size_t size) {
  set_has_creator();
  if (creator_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creator_ = new ::std::string;
  }
  creator_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.ResponseGetGroupInfo.creator)
}
inline ::std::string* ResponseGetGroupInfo::mutable_creator() {
  set_has_creator();
  if (creator_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    creator_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.ResponseGetGroupInfo.creator)
  return creator_;
}
inline ::std::string* ResponseGetGroupInfo::release_creator() {
  clear_has_creator();
  if (creator_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = creator_;
    creator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ResponseGetGroupInfo::set_allocated_creator(::std::string* creator) {
  if (creator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete creator_;
  }
  if (creator) {
    set_has_creator();
    creator_ = creator;
  } else {
    clear_has_creator();
    creator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.ResponseGetGroupInfo.creator)
}

// optional int32 status = 4;
inline bool ResponseGetGroupInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponseGetGroupInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponseGetGroupInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponseGetGroupInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ResponseGetGroupInfo::status() const {
  // @@protoc_insertion_point(field_get:group.ResponseGetGroupInfo.status)
  return status_;
}
inline void ResponseGetGroupInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseGetGroupInfo.status)
}

// optional uint64 last_active_time = 5;
inline bool ResponseGetGroupInfo::has_last_active_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResponseGetGroupInfo::set_has_last_active_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResponseGetGroupInfo::clear_has_last_active_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResponseGetGroupInfo::clear_last_active_time() {
  last_active_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_active_time();
}
inline ::google::protobuf::uint64 ResponseGetGroupInfo::last_active_time() const {
  // @@protoc_insertion_point(field_get:group.ResponseGetGroupInfo.last_active_time)
  return last_active_time_;
}
inline void ResponseGetGroupInfo::set_last_active_time(::google::protobuf::uint64 value) {
  set_has_last_active_time();
  last_active_time_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseGetGroupInfo.last_active_time)
}

// repeated .group.GroupMember member = 6;
inline int ResponseGetGroupInfo::member_size() const {
  return member_.size();
}
inline void ResponseGetGroupInfo::clear_member() {
  member_.Clear();
}
inline const ::group::GroupMember& ResponseGetGroupInfo::member(int index) const {
  // @@protoc_insertion_point(field_get:group.ResponseGetGroupInfo.member)
  return member_.Get(index);
}
inline ::group::GroupMember* ResponseGetGroupInfo::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:group.ResponseGetGroupInfo.member)
  return member_.Mutable(index);
}
inline ::group::GroupMember* ResponseGetGroupInfo::add_member() {
  // @@protoc_insertion_point(field_add:group.ResponseGetGroupInfo.member)
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::group::GroupMember >&
ResponseGetGroupInfo::member() const {
  // @@protoc_insertion_point(field_list:group.ResponseGetGroupInfo.member)
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::group::GroupMember >*
ResponseGetGroupInfo::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:group.ResponseGetGroupInfo.member)
  return &member_;
}

// -------------------------------------------------------------------

// RequestSetGroupStatus

// required string group_id = 1;
inline bool RequestSetGroupStatus::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestSetGroupStatus::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestSetGroupStatus::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestSetGroupStatus::clear_group_id() {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_->clear();
  }
  clear_has_group_id();
}
inline const ::std::string& RequestSetGroupStatus::group_id() const {
  // @@protoc_insertion_point(field_get:group.RequestSetGroupStatus.group_id)
  return *group_id_;
}
inline void RequestSetGroupStatus::set_group_id(const ::std::string& value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set:group.RequestSetGroupStatus.group_id)
}
inline void RequestSetGroupStatus::set_group_id(const char* value) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:group.RequestSetGroupStatus.group_id)
}
inline void RequestSetGroupStatus::set_group_id(const char* value, size_t size) {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:group.RequestSetGroupStatus.group_id)
}
inline ::std::string* RequestSetGroupStatus::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:group.RequestSetGroupStatus.group_id)
  return group_id_;
}
inline ::std::string* RequestSetGroupStatus::release_group_id() {
  clear_has_group_id();
  if (group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_id_;
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestSetGroupStatus::set_allocated_group_id(::std::string* group_id) {
  if (group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_id_;
  }
  if (group_id) {
    set_has_group_id();
    group_id_ = group_id;
  } else {
    clear_has_group_id();
    group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:group.RequestSetGroupStatus.group_id)
}

// required int32 status = 2;
inline bool RequestSetGroupStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestSetGroupStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestSetGroupStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestSetGroupStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RequestSetGroupStatus::status() const {
  // @@protoc_insertion_point(field_get:group.RequestSetGroupStatus.status)
  return status_;
}
inline void RequestSetGroupStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:group.RequestSetGroupStatus.status)
}

// -------------------------------------------------------------------

// ResponseSetGroupStatus

// required int32 result = 1;
inline bool ResponseSetGroupStatus::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseSetGroupStatus::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseSetGroupStatus::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseSetGroupStatus::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResponseSetGroupStatus::result() const {
  // @@protoc_insertion_point(field_get:group.ResponseSetGroupStatus.result)
  return result_;
}
inline void ResponseSetGroupStatus::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:group.ResponseSetGroupStatus.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace group

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_group_5fpackage_2eproto__INCLUDED
